{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Dexaminds Documentation Hub","text":"<p>Welcome to the internal engineering knowledge base.</p>"},{"location":"#sections","title":"\ud83d\udcda Sections","text":"<ul> <li>Docs</li> <li>Engineering Handbook</li> <li>API Guidelines</li> </ul>"},{"location":"api-guidelines/","title":"\ud83d\ude80 API Guidelines","text":"<p>Welcome to the API Guidelines! This collection of documents outlines the standards, best practices, and conventions for designing, developing, and maintaining APIs across our platform.</p> <p>Following these guidelines ensures consistency, improves developer experience, and enhances security and performance across all services.</p> <p>Please refer to the respective sections for REST, GraphQL, versioning, error handling, and more.</p>"},{"location":"api-guidelines/#quick-navigation","title":"\ud83d\udccb Quick Navigation","text":"<ul> <li>REST API Guidelines - Standards for RESTful API design</li> <li>GraphQL Guidelines - Best practices for GraphQL APIs</li> <li>Error Handling - Standardized error responses and codes</li> <li>Versioning - API versioning strategy</li> <li>Security - Security best practices</li> <li>Design Principles - Core API design philosophy</li> </ul>"},{"location":"api-guidelines/#purpose","title":"\ud83c\udfaf Purpose","text":"<p>These guidelines ensure consistency, improve developer experience, and enhance security and performance across all services. Following these standards helps maintain a cohesive API ecosystem that is:</p> <ul> <li>Intuitive: Easy to understand and use</li> <li>Consistent: Follows predictable patterns</li> <li>Maintainable: Easy to update and extend</li> <li>Secure: Built with security in mind</li> </ul>"},{"location":"api-guidelines/#style-formatting","title":"\ud83d\udee0 Style &amp; Formatting","text":"<ul> <li>Use clear, concise language</li> <li>Follow the Google API Design Guide principles</li> <li>Maintain consistent formatting across all API documentation</li> <li>Include practical examples for all endpoints and types</li> </ul>"},{"location":"api-guidelines/#maintenance","title":"\ud83d\udd04 Maintenance","text":"<ol> <li>Keep it current</li> <li>Update guidelines when introducing new patterns or technologies</li> <li> <p>Review and revise guidelines quarterly</p> </li> <li> <p>Versioning</p> </li> <li>Document breaking changes clearly</li> <li> <p>Maintain backward compatibility when possible</p> </li> <li> <p>Documentation</p> </li> <li>Include code samples in multiple languages</li> <li>Document all parameters and responses</li> <li>Provide context and examples for complex operations</li> </ol>"},{"location":"api-guidelines/#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions to improve these guidelines! Please follow these steps:</p> <ol> <li>Open an issue to discuss proposed changes</li> <li>Create a pull request with your updates</li> <li>Request review from the API Guild</li> </ol>"},{"location":"api-guidelines/#i-additional-resources","title":"\u2139\ufe0f Additional Resources","text":"<ul> <li>OpenAPI Specification</li> <li>GraphQL Best Practices</li> <li>REST API Tutorial</li> </ul> <p>Last updated: June 2024</p>"},{"location":"api-guidelines/design-principles/","title":"API Design Principles","text":"<p>API design is grounded in clarity, consistency, and usability. The following principles guide our decisions:</p>"},{"location":"api-guidelines/design-principles/#table-of-contents","title":"Table of Contents","text":"<ol> <li>RESTful Design</li> <li>Resource-Oriented</li> <li>Statelessness</li> <li>Consistency</li> <li>Idempotency</li> <li>Versioning</li> <li>Error Handling</li> <li>Performance</li> <li>Security</li> <li>Documentation</li> <li>Evolution</li> <li>Best Practices</li> </ol>"},{"location":"api-guidelines/design-principles/#restful-design","title":"RESTful Design","text":""},{"location":"api-guidelines/design-principles/#1-client-server-architecture","title":"1. Client-Server Architecture","text":"<ul> <li>Separation of Concerns: Clear separation between client and server</li> <li>Stateless Communication: Each request contains all necessary information</li> <li>Cacheable: Responses define cacheability</li> <li>Uniform Interface: Standardized way of interacting with resources</li> <li>Layered System: Client can't tell if connected to end server or intermediary</li> </ul>"},{"location":"api-guidelines/design-principles/#2-resource-identification","title":"2. Resource Identification","text":"<ul> <li>Use nouns (not verbs) to identify resources</li> <li>Use plural nouns for collections (<code>/users</code> not <code>/user</code>)</li> <li>Use forward slashes (/) for hierarchy (<code>/users/123/orders</code>)</li> <li>Use hyphens (-) for multi-word path segments (<code>/product-categories</code>)</li> <li>Use lowercase letters in paths and headers</li> <li>Never use file extensions in URIs</li> </ul>"},{"location":"api-guidelines/design-principles/#resource-oriented","title":"Resource-Oriented","text":""},{"location":"api-guidelines/design-principles/#1-resource-naming","title":"1. Resource Naming","text":"<ul> <li>Pluralization: Use plural for collections (<code>/users</code>)</li> <li>Consistency: Stick to either plural or singular (prefer plural)</li> <li>Concreteness: Use concrete rather than abstract names</li> <li>Avoid Verbs: Use HTTP methods to indicate actions</li> </ul>"},{"location":"api-guidelines/design-principles/#2-resource-relationships","title":"2. Resource Relationships","text":"<ul> <li>Hierarchy: Parent/child relationships via path segments (<code>/users/123/orders</code>)</li> <li>References: Use IDs to reference related resources</li> <li>Embedding: Include related resources when it improves efficiency</li> <li>Pagination: Always paginate collections</li> </ul>"},{"location":"api-guidelines/design-principles/#statelessness","title":"Statelessness","text":""},{"location":"api-guidelines/design-principles/#1-stateless-servers","title":"1. Stateless Servers","text":"<ul> <li>No client context stored on server between requests</li> <li>Each request contains all necessary authentication/authorization</li> <li>Session state held entirely on the client</li> <li>Improves reliability and scalability</li> </ul>"},{"location":"api-guidelines/design-principles/#2-authentication-authorization","title":"2. Authentication &amp; Authorization","text":"<ul> <li>Use stateless authentication (JWT, OAuth2)</li> <li>Include auth tokens in headers</li> <li>Implement proper token expiration and refresh</li> <li>Follow principle of least privilege</li> </ul>"},{"location":"api-guidelines/design-principles/#consistency","title":"Consistency","text":""},{"location":"api-guidelines/design-principles/#1-naming-conventions","title":"1. Naming Conventions","text":"<ul> <li>camelCase for JSON properties</li> <li>kebab-case for URLs and headers</li> <li>UPPER_SNAKE_CASE for constants and enums</li> <li>PascalCase for type names in documentation</li> </ul>"},{"location":"api-guidelines/design-principles/#2-response-format","title":"2. Response Format","text":"<pre><code>{\n  \"data\": {\n    \"id\": \"123\",\n    \"type\": \"users\",\n    \"attributes\": {\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"relationships\": {\n      \"organization\": {\n        \"data\": { \"id\": \"456\", \"type\": \"organizations\" }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"456\",\n      \"type\": \"organizations\",\n      \"attributes\": {\n        \"name\": \"Acme Inc.\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"total\": 100,\n    \"page\": 1,\n    \"limit\": 10\n  },\n  \"links\": {\n    \"self\": \"/users?page=1\",\n    \"next\": \"/users?page=2\",\n    \"prev\": null,\n    \"first\": \"/users?page=1\",\n    \"last\": \"/users?page=10\"\n  }\n}\n</code></pre>"},{"location":"api-guidelines/design-principles/#idempotency","title":"Idempotency","text":""},{"location":"api-guidelines/design-principles/#1-safe-methods","title":"1. Safe Methods","text":"<ul> <li>GET, HEAD, OPTIONS, and TRACE are naturally idempotent</li> <li>Multiple identical requests have the same effect as a single request</li> </ul>"},{"location":"api-guidelines/design-principles/#2-making-mutations-idempotent","title":"2. Making Mutations Idempotent","text":"<ul> <li>PUT: Replace entire resource (idempotent)</li> <li>PATCH: Partial updates (make idempotent with versioning)</li> <li>DELETE: Idempotent by nature</li> <li>POST: Not idempotent (use idempotency keys)</li> </ul>"},{"location":"api-guidelines/design-principles/#3-idempotency-keys","title":"3. Idempotency Keys","text":"<pre><code>POST /payments\nIdempotency-Key: 550e8400-e29b-41d4-a716-446655440000\nContent-Type: application/json\n\n{\n  \"amount\": 1000,\n  \"currency\": \"USD\",\n  \"description\": \"Subscription payment\"\n}\n</code></pre>"},{"location":"api-guidelines/design-principles/#versioning","title":"Versioning","text":""},{"location":"api-guidelines/design-principles/#1-versioning-strategies","title":"1. Versioning Strategies","text":"<ul> <li>URI Path: <code>/v1/users</code></li> <li>Header: <code>Accept: application/vnd.dexaminds.v1+json</code></li> <li>Query Param: <code>/users?version=1</code> (not recommended)</li> <li>Media Type: <code>application/vnd.dexaminds+json;version=1</code></li> </ul>"},{"location":"api-guidelines/design-principles/#2-versioning-best-practices","title":"2. Versioning Best Practices","text":"<ul> <li>Version early, version often</li> <li>Support multiple versions in parallel</li> <li>Provide clear deprecation policies</li> <li>Document version changes thoroughly</li> </ul>"},{"location":"api-guidelines/design-principles/#error-handling","title":"Error Handling","text":""},{"location":"api-guidelines/design-principles/#1-error-response-format","title":"1. Error Response Format","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"validation_error\",\n    \"message\": \"One or more validation errors occurred\",\n    \"target\": \"user_creation\",\n    \"details\": [\n      {\n        \"code\": \"required\",\n        \"target\": \"email\",\n        \"message\": \"Email is required\"\n      },\n      {\n        \"code\": \"min_length\",\n        \"target\": \"password\",\n        \"message\": \"Password must be at least 8 characters\"\n      }\n    ],\n    \"innerError\": {\n      \"code\": \"validation_failed\",\n      \"requestId\": \"a1b2c3d4\",\n      \"timestamp\": \"2025-06-30T06:27:45Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api-guidelines/design-principles/#2-http-status-codes","title":"2. HTTP Status Codes","text":"<ul> <li>2xx: Success</li> <li>4xx: Client errors</li> <li>5xx: Server errors</li> <li>Use specific status codes (e.g., 429 for rate limiting)</li> </ul>"},{"location":"api-guidelines/design-principles/#performance","title":"Performance","text":""},{"location":"api-guidelines/design-principles/#1-caching","title":"1. Caching","text":"<ul> <li>Client Caching: <code>Cache-Control</code>, <code>ETag</code>, <code>Last-Modified</code></li> <li>Server Caching: Redis, Memcached</li> <li>CDN Caching: For static assets</li> </ul>"},{"location":"api-guidelines/design-principles/#2-pagination","title":"2. Pagination","text":"<ul> <li>Offset-based: <code>?page=2&amp;limit=25</code></li> <li>Cursor-based: <code>?after=cursor&amp;limit=25</code></li> <li>Keyset Pagination: <code>?since_id=123&amp;limit=25</code></li> </ul>"},{"location":"api-guidelines/design-principles/#3-filtering-sorting","title":"3. Filtering &amp; Sorting","text":"<ul> <li>Filtering: <code>?status=active&amp;role=admin</code></li> <li>Sorting: <code>?sort=-created_at,name</code></li> <li>Field Selection: <code>?fields=id,name,email</code></li> </ul>"},{"location":"api-guidelines/design-principles/#security","title":"Security","text":""},{"location":"api-guidelines/design-principles/#1-authentication","title":"1. Authentication","text":"<ul> <li>OAuth 2.0 with OpenID Connect</li> <li>JWT for stateless authentication</li> <li>API keys for service-to-service</li> <li>MFA for sensitive operations</li> </ul>"},{"location":"api-guidelines/design-principles/#2-authorization","title":"2. Authorization","text":"<ul> <li>Role-Based Access Control (RBAC)</li> <li>Attribute-Based Access Control (ABAC)</li> <li>Fine-grained permissions</li> <li>Policy-based authorization</li> </ul>"},{"location":"api-guidelines/design-principles/#3-input-validation","title":"3. Input Validation","text":"<ul> <li>Validate all input data</li> <li>Use allow-listing</li> <li>Sanitize output</li> <li>Prevent injection attacks</li> </ul>"},{"location":"api-guidelines/design-principles/#documentation","title":"Documentation","text":""},{"location":"api-guidelines/design-principles/#1-api-reference","title":"1. API Reference","text":"<ul> <li>Endpoint descriptions</li> <li>Request/response examples</li> <li>Error codes</li> <li>Authentication requirements</li> </ul>"},{"location":"api-guidelines/design-principles/#2-interactive-documentation","title":"2. Interactive Documentation","text":"<ul> <li>Swagger/OpenAPI</li> <li>Postman collections</li> <li>API explorers</li> </ul>"},{"location":"api-guidelines/design-principles/#3-guides-tutorials","title":"3. Guides &amp; Tutorials","text":"<ul> <li>Getting started</li> <li>Authentication</li> <li>Common use cases</li> <li>Migration guides</li> </ul>"},{"location":"api-guidelines/design-principles/#evolution","title":"Evolution","text":""},{"location":"api-guidelines/design-principles/#1-backward-compatibility","title":"1. Backward Compatibility","text":"<ul> <li>Add new fields as optional</li> <li>Don't remove or rename fields</li> <li>Use feature flags</li> <li>Version your API</li> </ul>"},{"location":"api-guidelines/design-principles/#2-deprecation-policy","title":"2. Deprecation Policy","text":"<ul> <li>Announce deprecations in advance</li> <li>Provide migration guides</li> <li>Maintain deprecated versions for a period</li> <li>Monitor usage of deprecated endpoints</li> </ul>"},{"location":"api-guidelines/design-principles/#best-practices","title":"Best Practices","text":""},{"location":"api-guidelines/design-principles/#1-design-first","title":"1. Design First","text":"<ul> <li>Design before implementation</li> <li>Use API-first approach</li> <li>Get feedback early</li> <li>Iterate on design</li> </ul>"},{"location":"api-guidelines/design-principles/#2-keep-it-simple-kiss","title":"2. Keep It Simple (KISS)","text":"<ul> <li>Favor simplicity over complexity</li> <li>Follow the principle of least surprise</li> <li>Avoid over-engineering</li> <li>Make common tasks easy</li> </ul>"},{"location":"api-guidelines/design-principles/#3-dont-repeat-yourself-dry","title":"3. Don't Repeat Yourself (DRY)","text":"<ul> <li>Reuse schemas and components</li> <li>Centralize common functionality</li> <li>Avoid code duplication</li> <li>Use references in OpenAPI/Swagger</li> </ul>"},{"location":"api-guidelines/design-principles/#4-you-arent-gonna-need-it-yagni","title":"4. You Aren't Gonna Need It (YAGNI)","text":"<ul> <li>Implement features when needed</li> <li>Avoid speculative generality</li> <li>Keep the API surface small</li> <li>Focus on current requirements</li> </ul>"},{"location":"api-guidelines/design-principles/#5-principle-of-least-privilege","title":"5. Principle of Least Privilege","text":"<ul> <li>Grant minimum necessary permissions</li> <li>Use scopes for OAuth</li> <li>Implement proper access controls</li> <li>Audit permissions regularly</li> </ul>"},{"location":"api-guidelines/design-principles/#6-fail-fast-fail-loudly","title":"6. Fail Fast, Fail Loudly","text":"<ul> <li>Validate early</li> <li>Provide clear error messages</li> <li>Don't hide errors</li> <li>Log failures appropriately</li> </ul>"},{"location":"api-guidelines/design-principles/#anti-patterns-to-avoid","title":"Anti-Patterns to Avoid","text":""},{"location":"api-guidelines/design-principles/#1-over-fetchingunder-fetching","title":"1. Over-fetching/Under-fetching","text":"<ul> <li>Problem: Getting too much or too little data</li> <li>Solution: Use field selection and sparse fieldsets</li> </ul>"},{"location":"api-guidelines/design-principles/#2-chatty-apis","title":"2. Chatty APIs","text":"<ul> <li>Problem: Too many round-trips</li> <li>Solution: Batch requests or use GraphQL</li> </ul>"},{"location":"api-guidelines/design-principles/#3-ignoring-caching","title":"3. Ignoring Caching","text":"<ul> <li>Problem: Unnecessary load on servers</li> <li>Solution: Implement proper caching headers</li> </ul>"},{"location":"api-guidelines/design-principles/#4-ignoring-rate-limiting","title":"4. Ignoring Rate Limiting","text":"<ul> <li>Problem: API abuse and DDoS attacks</li> <li>Solution: Implement rate limiting and quotas</li> </ul>"},{"location":"api-guidelines/design-principles/#5-poor-error-handling","title":"5. Poor Error Handling","text":"<ul> <li>Problem: Unhelpful error messages</li> <li>Solution: Standardized error responses with codes</li> </ul>"},{"location":"api-guidelines/design-principles/#api-maturity-model","title":"API Maturity Model","text":""},{"location":"api-guidelines/design-principles/#level-0-http-as-a-tunnel","title":"Level 0: HTTP as a Tunnel","text":"<ul> <li>Single POST endpoint</li> <li>All actions as parameters</li> <li>No REST principles</li> </ul>"},{"location":"api-guidelines/design-principles/#level-1-resources","title":"Level 1: Resources","text":"<ul> <li>Multiple URIs</li> <li>Resources as nouns</li> <li>Still mostly RPC-style</li> </ul>"},{"location":"api-guidelines/design-principles/#level-2-http-verbs","title":"Level 2: HTTP Verbs","text":"<ul> <li>Proper use of HTTP methods</li> <li>Status codes</li> <li>Still some RPC endpoints</li> </ul>"},{"location":"api-guidelines/design-principles/#level-3-hypermedia-controls","title":"Level 3: Hypermedia Controls","text":"<ul> <li>HATEOAS</li> <li>Discoverable APIs</li> <li>Self-documenting</li> </ul>"},{"location":"api-guidelines/design-principles/#measuring-api-quality","title":"Measuring API Quality","text":""},{"location":"api-guidelines/design-principles/#1-performance-metrics","title":"1. Performance Metrics","text":"<ul> <li>Response time (p50, p95, p99)</li> <li>Throughput (requests/second)</li> <li>Error rate</li> <li>Uptime/availability</li> </ul>"},{"location":"api-guidelines/design-principles/#2-developer-experience","title":"2. Developer Experience","text":"<ul> <li>Time to first successful call</li> <li>Documentation quality</li> <li>SDK availability</li> <li>Community support</li> </ul>"},{"location":"api-guidelines/design-principles/#3-business-metrics","title":"3. Business Metrics","text":"<ul> <li>API adoption rate</li> <li>Active developers</li> <li>Revenue impact</li> <li>Cost per API call</li> </ul>"},{"location":"api-guidelines/design-principles/#conclusion","title":"Conclusion","text":"<p>Designing great APIs requires careful consideration of many factors. By following these principles, you can create APIs that are:</p> <ul> <li>Intuitive: Easy to understand and use</li> <li>Efficient: Fast and resource-friendly</li> <li>Reliable: Consistent and available</li> <li>Secure: Protected against threats</li> <li>Maintainable: Easy to evolve over time</li> </ul> <p>Remember that API design is an iterative process. Continuously gather feedback from your consumers and be prepared to make improvements based on real-world usage patterns.</p>"},{"location":"api-guidelines/error-handling/","title":"API Error Handling Guidelines","text":""},{"location":"api-guidelines/error-handling/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Error Response Format</li> <li>HTTP Status Codes</li> <li>Error Types</li> <li>Validation Errors</li> <li>Authentication &amp; Authorization</li> <li>Rate Limiting</li> <li>Error Logging</li> <li>Client-Side Handling</li> </ol>"},{"location":"api-guidelines/error-handling/#error-response-format","title":"Error Response Format","text":""},{"location":"api-guidelines/error-handling/#standard-error-response","title":"Standard Error Response","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"INVALID_INPUT\",\n    \"message\": \"One or more validation errors occurred.\",\n    \"target\": \"user_registration\",\n    \"details\": [\n      {\n        \"code\": \"REQUIRED_FIELD\",\n        \"target\": \"email\",\n        \"message\": \"Email is required\"\n      },\n      {\n        \"code\": \"INVALID_FORMAT\",\n        \"target\": \"password\",\n        \"message\": \"Password must be at least 8 characters\"\n      }\n    ],\n    \"innerError\": {\n      \"code\": \"VALIDATION_ERROR\",\n      \"requestId\": \"a1b2c3d4\",\n      \"timestamp\": \"2025-06-30T06:27:45Z\"\n    }\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#http-status-codes","title":"HTTP Status Codes","text":""},{"location":"api-guidelines/error-handling/#2xx-success","title":"2xx Success","text":"<ul> <li><code>200 OK</code>: Standard success response</li> <li><code>201 Created</code>: Resource created successfully</li> <li><code>202 Accepted</code>: Request accepted for processing</li> <li><code>204 No Content</code>: Success with no content to return</li> </ul>"},{"location":"api-guidelines/error-handling/#4xx-client-errors","title":"4xx Client Errors","text":"<ul> <li><code>400 Bad Request</code>: Invalid request format</li> <li><code>401 Unauthorized</code>: Authentication required</li> <li><code>403 Forbidden</code>: Insufficient permissions</li> <li><code>404 Not Found</code>: Resource doesn't exist</li> <li><code>405 Method Not Allowed</code>: HTTP method not supported</li> <li><code>406 Not Acceptable</code>: Requested format not available</li> <li><code>409 Conflict</code>: Resource conflict</li> <li><code>410 Gone</code>: Resource permanently removed</li> <li><code>422 Unprocessable Entity</code>: Validation errors</li> <li><code>429 Too Many Requests</code>: Rate limit exceeded</li> </ul>"},{"location":"api-guidelines/error-handling/#5xx-server-errors","title":"5xx Server Errors","text":"<ul> <li><code>500 Internal Server Error</code>: Generic server error</li> <li><code>501 Not Implemented</code>: Feature not implemented</li> <li><code>502 Bad Gateway</code>: Invalid response from upstream</li> <li><code>503 Service Unavailable</code>: Service temporarily unavailable</li> <li><code>504 Gateway Timeout</code>: Upstream timeout</li> </ul>"},{"location":"api-guidelines/error-handling/#error-types","title":"Error Types","text":""},{"location":"api-guidelines/error-handling/#standard-error-codes","title":"Standard Error Codes","text":"Code Description <code>AUTH_REQUIRED</code> Authentication required <code>FORBIDDEN</code> Insufficient permissions <code>INVALID_INPUT</code> Invalid request data <code>NOT_FOUND</code> Resource not found <code>RATE_LIMIT_EXCEEDED</code> Too many requests <code>RESOURCE_EXISTS</code> Resource already exists <code>SERVICE_ERROR</code> Internal server error <code>VALIDATION_ERROR</code> Data validation failed"},{"location":"api-guidelines/error-handling/#validation-errors","title":"Validation Errors","text":""},{"location":"api-guidelines/error-handling/#request-validation","title":"Request Validation","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"VALIDATION_ERROR\",\n    \"message\": \"Request validation failed\",\n    \"details\": [\n      {\n        \"code\": \"REQUIRED\",\n        \"target\": \"email\",\n        \"message\": \"Email is required\"\n      },\n      {\n        \"code\": \"INVALID_FORMAT\",\n        \"target\": \"email\",\n        \"message\": \"Invalid email format\"\n      },\n      {\n        \"code\": \"MIN_LENGTH\",\n        \"target\": \"password\",\n        \"message\": \"Password must be at least 8 characters\",\n        \"constraints\": {\n          \"min\": 8\n        }\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#business-rule-validation","title":"Business Rule Validation","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"BUSINESS_RULE_VIOLATION\",\n    \"message\": \"Cannot delete active user\",\n    \"details\": [\n      {\n        \"code\": \"USER_ACTIVE\",\n        \"target\": \"user\",\n        \"message\": \"Cannot delete user with active subscriptions\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#authentication-and-authorization","title":"Authentication and Authorization","text":""},{"location":"api-guidelines/error-handling/#authentication-error","title":"Authentication Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"UNAUTHORIZED\",\n    \"message\": \"Invalid or expired authentication token\",\n    \"details\": [\n      {\n        \"code\": \"TOKEN_EXPIRED\",\n        \"target\": \"authorization\",\n        \"message\": \"Token expired at 2025-06-30T12:00:00Z\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#authorization-error","title":"Authorization Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"FORBIDDEN\",\n    \"message\": \"Insufficient permissions\",\n    \"details\": [\n      {\n        \"code\": \"MISSING_PERMISSION\",\n        \"target\": \"user:delete\",\n        \"message\": \"Requires 'admin' role\"\n      }\n    ]\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#rate-limiting","title":"Rate Limiting","text":""},{"location":"api-guidelines/error-handling/#rate-limit-response-headers","title":"Rate Limit Response Headers","text":"<pre><code>X-RateLimit-Limit: 100\nX-RateLimit-Remaining: 42\nX-RateLimit-Reset: 1625040000\nRetry-After: 60\n</code></pre>"},{"location":"api-guidelines/error-handling/#rate-limit-error","title":"Rate Limit Error","text":"<pre><code>{\n  \"error\": {\n    \"code\": \"RATE_LIMIT_EXCEEDED\",\n    \"message\": \"Too many requests, please try again later\",\n    \"details\": [\n      {\n        \"code\": \"RATE_LIMIT_REACHED\",\n        \"target\": \"api\",\n        \"message\": \"Rate limit of 100 requests per hour exceeded\"\n      }\n    ],\n    \"retryAfter\": 60\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#error-logging","title":"Error Logging","text":""},{"location":"api-guidelines/error-handling/#log-entry-example","title":"Log Entry Example","text":"<pre><code>{\n  \"timestamp\": \"2025-06-30T06:27:45.123Z\",\n  \"level\": \"ERROR\",\n  \"requestId\": \"a1b2c3d4\",\n  \"correlationId\": \"x-correlation-id-value\",\n  \"method\": \"POST\",\n  \"path\": \"/api/users\",\n  \"status\": 400,\n  \"durationMs\": 42,\n  \"userAgent\": \"Mozilla/5.0\",\n  \"clientIp\": \"192.168.1.1\",\n  \"error\": {\n    \"name\": \"ValidationError\",\n    \"message\": \"Validation failed\",\n    \"code\": \"VALIDATION_ERROR\",\n    \"details\": [\n      {\n        \"code\": \"REQUIRED\",\n        \"target\": \"email\",\n        \"message\": \"Email is required\"\n      }\n    ],\n    \"stack\": \"ValidationError: Validation failed...\"\n  },\n  \"environment\": \"production\",\n  \"version\": \"1.0.0\"\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#client-side-handling","title":"Client-Side Handling","text":""},{"location":"api-guidelines/error-handling/#error-handling-best-practices","title":"Error Handling Best Practices","text":"<ol> <li>User-Friendly Messages: Map error codes to user-friendly messages</li> <li>Retry Logic: Implement retry for transient errors (5xx, 429)</li> <li>Circuit Breaker: Prevent cascading failures</li> <li>Error Boundaries: Gracefully handle UI errors</li> <li>Error Reporting: Report client-side errors to monitoring</li> </ol>"},{"location":"api-guidelines/error-handling/#example-error-boundary-react","title":"Example Error Boundary (React)","text":"<pre><code>class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false, error: null };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log error to error reporting service\n    logErrorToService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        &lt;div className=\"error-boundary\"&gt;\n          &lt;h2&gt;Something went wrong&lt;/h2&gt;\n          &lt;p&gt;{this.state.error?.message}&lt;/p&gt;\n          &lt;button onClick={() =&gt; window.location.reload()}&gt;\n            Reload Page\n          &lt;/button&gt;\n        &lt;/div&gt;\n      );\n    }\n\n    return this.props.children;\n  }\n}\n</code></pre>"},{"location":"api-guidelines/error-handling/#client-error-handling-javascript","title":"Client Error Handling (JavaScript)","text":"<p>```javascript async function fetchWithErrorHandling(url, options = {}) {   try {     const response = await fetch(url, {       ...options,       headers: {         'Content-Type': 'application/json',         'Accept': 'application/json',         ...options.headers,       },     });</p> <pre><code>const data = await response.json();\n\nif (!response.ok) {\n  // Handle API errors\n  const error = new Error(data.error?.message || 'API request failed');\n  error.code = data.error?.code || 'API_ERROR';\n  error.status = response.status;\n  error.details = data.error?.details || [];\n  throw error;\n}\n\nreturn data;\n</code></pre> <p>} catch (error) {     if (error.name === 'AbortError') {       console.log('Request was aborted');       throw new Error('Request was cancelled');     }</p> <pre><code>// Handle network errors\nif (!navigator.onLine) {\n  throw new Error('No internet connection');\n}\n\n// Re-throw the error for the caller to handle\nthrow error;\n</code></pre> <p>} }</p>"},{"location":"api-guidelines/graphql-guidelines/","title":"GraphQL API Guidelines","text":""},{"location":"api-guidelines/graphql-guidelines/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Schema Design</li> <li>Naming Conventions</li> <li>Query Structure</li> <li>Mutations</li> <li>Error Handling</li> <li>Performance Considerations</li> <li>Security</li> <li>Versioning</li> </ol>"},{"location":"api-guidelines/graphql-guidelines/#schema-design","title":"Schema Design","text":""},{"location":"api-guidelines/graphql-guidelines/#types","title":"Types","text":"<ul> <li>Use descriptive, domain-specific type names (e.g., <code>CustomerOrder</code> instead of <code>Order</code>)</li> <li>Group related fields into interfaces when appropriate</li> <li>Use enums for fields with a fixed set of values</li> <li>Document all types and fields with descriptions</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#example-type-definition","title":"Example Type Definition","text":"<pre><code>\"\"\"\nRepresents a user in our system\n\"\"\"\ntype User {\n  \"\"\"Unique identifier for the user\"\"\"\n  id: ID!\n  \"\"\"User's full name\"\"\"\n  name: String!\n  \"\"\"User's email address (must be unique)\"\"\"\n  email: String!\n  \"\"\"When the user account was created\"\"\"\n  createdAt: DateTime!\n  \"\"\"User's current status\"\"\"\n  status: UserStatus!\n}\n\nenum UserStatus {\n  ACTIVE\n  INACTIVE\n  SUSPENDED\n}\n</code></pre>"},{"location":"api-guidelines/graphql-guidelines/#naming-conventions","title":"Naming Conventions","text":"<ul> <li>Use <code>PascalCase</code> for type names</li> <li>Use <code>camelCase</code> for field names</li> <li>Use <code>SCREAMING_SNAKE_CASE</code> for enum values</li> <li>Use <code>_</code> prefix for deprecated fields</li> <li>Use <code>input</code> for mutation input types</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#query-structure","title":"Query Structure","text":""},{"location":"api-guidelines/graphql-guidelines/#best-practices","title":"Best Practices","text":"<ul> <li>Structure queries to match the component's data requirements</li> <li>Use fragments to share field selections</li> <li>Avoid deep nesting (prefer &lt; 5 levels)</li> <li>Use pagination for lists</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#example-query","title":"Example Query","text":"<pre><code>query GetUserWithOrders($userId: ID!, $first: Int = 10, $after: String) {\n  user(id: $userId) {\n    id\n    name\n    email\n    orders(first: $first, after: $after) {\n      edges {\n        node {\n          id\n          total\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        endCursor\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"api-guidelines/graphql-guidelines/#mutations","title":"Mutations","text":""},{"location":"api-guidelines/graphql-guidelines/#naming","title":"Naming","text":"<ul> <li>Use verbs to describe actions (e.g., <code>createUser</code>, <code>updateProfile</code>)</li> <li>Return the modified resource and relevant query fields</li> <li>Make mutations idempotent when possible</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#example-mutation","title":"Example Mutation","text":"<pre><code>mutation UpdateUserProfile($input: UpdateUserInput!) {\n  updateUserProfile(input: $input) {\n    user {\n      id\n      name\n      email\n    }\n    errors {\n      field\n      message\n    }\n  }\n}\n\n# Variables\n{\n  \"input\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\"\n  }\n}\n</code></pre>"},{"location":"api-guidelines/graphql-guidelines/#error-handling","title":"Error Handling","text":""},{"location":"api-guidelines/graphql-guidelines/#standard-error-format","title":"Standard Error Format","text":"<pre><code>{\n  \"errors\": [\n    {\n      \"message\": \"Invalid email format\",\n      \"locations\": [ { \"line\": 2, \"column\": 3 } ],\n      \"path\": [ \"createUser\" ],\n      \"extensions\": {\n        \"code\": \"VALIDATION_ERROR\",\n        \"field\": \"email\",\n        \"details\": \"Must be a valid email address\"\n      }\n    }\n  ],\n  \"data\": null\n}\n</code></pre>"},{"location":"api-guidelines/graphql-guidelines/#error-types","title":"Error Types","text":"<ul> <li><code>AUTHENTICATION_ERROR</code>: Invalid or missing authentication</li> <li><code>FORBIDDEN</code>: Insufficient permissions</li> <li><code>NOT_FOUND</code>: Resource doesn't exist</li> <li><code>VALIDATION_ERROR</code>: Input validation failed</li> <li><code>INTERNAL_SERVER_ERROR</code>: Server-side error</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#performance-considerations","title":"Performance Considerations","text":""},{"location":"api-guidelines/graphql-guidelines/#n1-problem","title":"N+1 Problem","text":"<ul> <li>Use DataLoader to batch and cache database queries</li> <li>Implement field-level dataloaders for complex relationships</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#query-complexity","title":"Query Complexity","text":"<ul> <li>Set maximum query depth limits</li> <li>Implement query cost analysis</li> <li>Consider using persisted queries in production</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#security","title":"Security","text":""},{"location":"api-guidelines/graphql-guidelines/#authentication","title":"Authentication","text":"<ul> <li>Use JWT or OAuth2 for authentication</li> <li>Include auth token in the <code>Authorization</code> header</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#authorization","title":"Authorization","text":"<ul> <li>Implement field-level permissions</li> <li>Use directives for role-based access control</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#example-with-directives","title":"Example with Directives","text":"<pre><code>type Query {\n  user(id: ID!): User @hasRole(role: \"ADMIN\")\n  me: User @authenticated\n}\n\ntype User {\n  id: ID!\n  email: String! @hasScope(scope: \"email\")\n  ssn: String @hasRole(role: \"HR\")\n}\n</code></pre>"},{"location":"api-guidelines/graphql-guidelines/#versioning","title":"Versioning","text":"<ul> <li>Prefer schema evolution over versioning</li> <li>Add new fields instead of changing existing ones</li> <li>Use <code>@deprecated</code> directive for deprecated fields</li> <li>Consider using schema stitching for major changes</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#tooling","title":"Tooling","text":"<ul> <li>Use GraphQL Code Generator for type safety</li> <li>Implement Apollo Engine for monitoring</li> <li>Set up schema linting with <code>graphql-schema-linter</code></li> <li>Document with GraphQL Voyager or GraphiQL</li> </ul>"},{"location":"api-guidelines/graphql-guidelines/#example-subscription","title":"Example Subscription","text":"<pre><code>subscription OnOrderStatusChanged($orderId: ID!) {\n  orderStatusChanged(orderId: $orderId) {\n    id\n    status\n    updatedAt\n  }\n}\n</code></pre>"},{"location":"api-guidelines/graphql-guidelines/#testing","title":"Testing","text":"<ul> <li>Test queries and mutations in isolation</li> <li>Mock external services in tests</li> <li>Test error cases and edge conditions</li> <li>Consider snapshot testing for complex queries</li> </ul>"},{"location":"api-guidelines/rest-guidelines/","title":"REST API Guidelines","text":""},{"location":"api-guidelines/rest-guidelines/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Resource Naming</li> <li>HTTP Methods</li> <li>Request &amp; Response Format</li> <li>Filtering, Sorting &amp; Pagination</li> <li>Caching</li> <li>Rate Limiting</li> </ol>"},{"location":"api-guidelines/rest-guidelines/#resource-naming","title":"Resource Naming","text":"<ul> <li>Use nouns to represent resources (e.g., <code>/users</code>, <code>/products</code>)</li> <li>Use plural form for resource names</li> <li>Use kebab-case for path segments (e.g., <code>/user-roles</code>)</li> <li>Use forward slashes for hierarchy (e.g., <code>/users/{id}/orders</code>)</li> <li>Avoid file extensions in URIs</li> <li>Use query parameters for filtering (e.g., <code>/users?role=admin</code>)</li> </ul>"},{"location":"api-guidelines/rest-guidelines/#http-methods","title":"HTTP Methods","text":"Method Description Idempotent GET Retrieve a resource Yes POST Create a new resource No PUT Update/replace a resource Yes PATCH Partially update a resource No DELETE Delete a resource Yes"},{"location":"api-guidelines/rest-guidelines/#request-response-format","title":"Request &amp; Response Format","text":""},{"location":"api-guidelines/rest-guidelines/#request-headers","title":"Request Headers","text":"<pre><code>Accept: application/json\nContent-Type: application/json\nAuthorization: Bearer &lt;token&gt;\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#response-format","title":"Response Format","text":"<pre><code>{\n  \"data\": {},\n  \"meta\": {\n    \"total\": 100,\n    \"page\": 1,\n    \"limit\": 10\n  },\n  \"links\": {\n    \"self\": \"/users?page=1\",\n    \"next\": \"/users?page=2\",\n    \"prev\": null,\n    \"first\": \"/users?page=1\",\n    \"last\": \"/users?page=10\"\n  }\n}\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#filtering-sorting-pagination","title":"Filtering, Sorting &amp; Pagination","text":""},{"location":"api-guidelines/rest-guidelines/#filtering","title":"Filtering","text":"<pre><code>GET /users?status=active&amp;role=admin\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#sorting","title":"Sorting","text":"<pre><code>GET /users?sort=-created_at,name\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#pagination","title":"Pagination","text":"<pre><code>GET /users?page=2&amp;limit=20\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#caching","title":"Caching","text":"<ul> <li>Use ETags for resource versioning</li> <li>Set appropriate Cache-Control headers</li> <li>Consider implementing conditional requests (If-None-Match, If-Modified-Since)</li> </ul>"},{"location":"api-guidelines/rest-guidelines/#rate-limiting","title":"Rate Limiting","text":"<ul> <li>Implement rate limiting using headers:</li> <li><code>X-RateLimit-Limit</code>: Request limit per time window</li> <li><code>X-RateLimit-Remaining</code>: Remaining requests</li> <li><code>X-RateLimit-Reset</code>: Time when limit resets</li> </ul>"},{"location":"api-guidelines/rest-guidelines/#best-practices","title":"Best Practices","text":"<ul> <li>Use HTTPS exclusively</li> <li>Version your API in the URL (e.g., <code>/v1/users</code>)</li> <li>Use proper HTTP status codes</li> <li>Include meaningful error messages</li> <li>Support CORS if needed</li> <li>Document your API using OpenAPI/Swagger</li> <li>Implement proper authentication and authorization</li> <li>Validate all input data</li> <li>Sanitize output data</li> <li>Implement proper logging and monitoring</li> </ul>"},{"location":"api-guidelines/rest-guidelines/#example-endpoints","title":"Example Endpoints","text":""},{"location":"api-guidelines/rest-guidelines/#create-a-user","title":"Create a User","text":"<pre><code>POST /v1/users\nContent-Type: application/json\n\n{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"role\": \"developer\"\n}\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#get-user-by-id","title":"Get User by ID","text":"<pre><code>GET /v1/users/123\nAccept: application/json\n</code></pre>"},{"location":"api-guidelines/rest-guidelines/#update-user","title":"Update User","text":"<p>```http PATCH /v1/users/123 Content-Type: application/json</p> <p>{   \"role\": \"admin\" }</p>"},{"location":"api-guidelines/security/","title":"API Security Guidelines","text":""},{"location":"api-guidelines/security/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Authentication</li> <li>Authorization</li> <li>Input Validation</li> <li>Data Protection</li> <li>Rate Limiting</li> <li>HTTPS &amp; TLS</li> <li>CORS</li> <li>Security Headers</li> <li>API Keys</li> <li>Vulnerability Management</li> <li>Security Testing</li> <li>Incident Response</li> </ol>"},{"location":"api-guidelines/security/#authentication","title":"Authentication","text":""},{"location":"api-guidelines/security/#oauth-20-with-openid-connect","title":"OAuth 2.0 with OpenID Connect","text":"<ul> <li>Use OpenID Connect for authentication</li> <li>Implement the Authorization Code flow for web applications</li> <li>Use PKCE (Proof Key for Code Exchange) for public clients</li> <li>Set appropriate token expiration times:</li> <li>Access tokens: 15-60 minutes</li> <li>Refresh tokens: 7-30 days</li> <li>ID tokens: 5 minutes</li> </ul>"},{"location":"api-guidelines/security/#jwt-best-practices","title":"JWT Best Practices","text":"<ul> <li>Use strong signing algorithms (RS256, ES256)</li> <li>Set reasonable expiration times</li> <li>Include standard claims (iss, sub, aud, exp, iat, nbf)</li> <li>Validate all tokens on the server side</li> <li>Store tokens securely (httpOnly, Secure, SameSite=Strict)</li> </ul>"},{"location":"api-guidelines/security/#example-jwt-validation","title":"Example JWT Validation","text":"<pre><code>const jwt = require('jsonwebtoken');\n\nfunction validateToken(token) {\n  return new Promise((resolve, reject) =&gt; {\n    jwt.verify(\n      token,\n      process.env.PUBLIC_KEY,\n      {\n        algorithms: ['RS256'],\n        issuer: 'https://auth.dexaminds.com',\n        audience: 'api.dexaminds.com',\n        clockTolerance: 30, // seconds\n        maxAge: '1h',\n      },\n      (err, decoded) =&gt; {\n        if (err) return reject(err);\n        resolve(decoded);\n      }\n    );\n  });\n}\n</code></pre>"},{"location":"api-guidelines/security/#authorization","title":"Authorization","text":""},{"location":"api-guidelines/security/#role-based-access-control-rbac","title":"Role-Based Access Control (RBAC)","text":"<ul> <li>Define clear roles and permissions</li> <li>Implement attribute-based access control (ABAC) for fine-grained control</li> <li>Use policy-based authorization for complex rules</li> <li>Implement resource-level permissions</li> </ul>"},{"location":"api-guidelines/security/#example-authorization-middleware","title":"Example Authorization Middleware","text":"<pre><code>function requirePermission(permission) {\n  return (req, res, next) =&gt; {\n    if (!req.user || !req.user.permissions.includes(permission)) {\n      return res.status(403).json({\n        error: {\n          code: 'FORBIDDEN',\n          message: 'Insufficient permissions',\n          details: [{\n            code: 'MISSING_PERMISSION',\n            target: permission,\n            message: `Requires '${permission}' permission`\n          }]\n        }\n      });\n    }\n    next();\n  };\n}\n</code></pre>"},{"location":"api-guidelines/security/#input-validation","title":"Input Validation","text":""},{"location":"api-guidelines/security/#validation-rules","title":"Validation Rules","text":"<ul> <li>Validate all input data (headers, query params, request body, path params)</li> <li>Use strong input validation libraries (Joi, class-validator, etc.)</li> <li>Implement allow-listing (not block-listing)</li> <li>Sanitize all output data</li> <li>Set maximum lengths for all string inputs</li> </ul>"},{"location":"api-guidelines/security/#example-validation-with-joi","title":"Example Validation with Joi","text":"<pre><code>const userSchema = Joi.object({\n  email: Joi.string().email().required(),\n  password: Joi.string()\n    .min(12)\n    .max(72) // bcrypt max length\n    .pattern(/[a-z]/)\n    .pattern(/[A-Z]/)\n    .pattern(/[0-9]/)\n    .pattern(/[^a-zA-Z0-9]/)\n    .required(),\n  role: Joi.string().valid('user', 'admin', 'support').default('user'),\n  metadata: Joi.object({\n    termsAccepted: Joi.boolean().valid(true).required(),\n    marketingOptIn: Joi.boolean().default(false)\n  }).required()\n});\n</code></pre>"},{"location":"api-guidelines/security/#data-protection","title":"Data Protection","text":""},{"location":"api-guidelines/security/#data-encryption","title":"Data Encryption","text":"<ul> <li>Encrypt sensitive data at rest (AES-256)</li> <li>Use TLS 1.2+ for data in transit</li> <li>Hash passwords with strong algorithms (Argon2, bcrypt, PBKDF2)</li> <li>Encrypt sensitive fields in the database</li> </ul>"},{"location":"api-guidelines/security/#example-password-hashing","title":"Example Password Hashing","text":"<pre><code>const bcrypt = require('bcrypt');\nconst SALT_ROUNDS = 12;\n\nasync function hashPassword(password) {\n  return bcrypt.hash(password, SALT_ROUNDS);\n}\n\nasync function verifyPassword(password, hash) {\n  return bcrypt.compare(password, hash);\n}\n</code></pre>"},{"location":"api-guidelines/security/#rate-limiting","title":"Rate Limiting","text":""},{"location":"api-guidelines/security/#implementation","title":"Implementation","text":"<ul> <li>Implement rate limiting by IP, user, and API key</li> <li>Use sliding window or token bucket algorithm</li> <li>Set appropriate limits based on endpoint sensitivity</li> <li>Include rate limit headers in responses</li> </ul>"},{"location":"api-guidelines/security/#example-rate-limiting-headers","title":"Example Rate Limiting Headers","text":"<pre><code>X-RateLimit-Limit: 100\nX-RateLimit-Remaining: 75\nX-RateLimit-Reset: 1625040000\nRetry-After: 60\n</code></pre>"},{"location":"api-guidelines/security/#https-tls","title":"HTTPS &amp; TLS","text":""},{"location":"api-guidelines/security/#best-practices","title":"Best Practices","text":"<ul> <li>Use TLS 1.2 or higher</li> <li>Implement HSTS with preload</li> <li>Disable weak ciphers and protocols</li> <li>Use strong key exchange (ECDHE, DHE)</li> <li>Rotate certificates regularly (90 days or less)</li> </ul>"},{"location":"api-guidelines/security/#recommended-cipher-suites","title":"Recommended Cipher Suites","text":"<pre><code>TLS_AES_256_GCM_SHA384\nTLS_CHACHA20_POLY1305_SHA256\nTLS_AES_128_GCM_SHA256\nECDHE-ECDSA-AES256-GCM-SHA384\n</code></pre>"},{"location":"api-guidelines/security/#cors","title":"CORS","text":""},{"location":"api-guidelines/security/#configuration","title":"Configuration","text":"<ul> <li>Be specific with allowed origins</li> <li>Don't use wildcard (*) for credentials</li> <li>Set appropriate headers</li> <li>Preflight caching</li> </ul>"},{"location":"api-guidelines/security/#example-cors-headers","title":"Example CORS Headers","text":"<pre><code>Access-Control-Allow-Origin: https://app.dexaminds.com\nAccess-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS\nAccess-Control-Allow-Headers: Content-Type, Authorization\nAccess-Control-Allow-Credentials: true\nAccess-Control-Max-Age: 86400\n</code></pre>"},{"location":"api-guidelines/security/#security-headers","title":"Security Headers","text":""},{"location":"api-guidelines/security/#recommended-headers","title":"Recommended Headers","text":"<pre><code>Strict-Transport-Security: max-age=63072000; includeSubDomains; preload\nX-Content-Type-Options: nosniff\nX-Frame-Options: DENY\nX-XSS-Protection: 1; mode=block\nContent-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' cdn.example.com; img-src 'self' data:; style-src 'self' 'unsafe-inline';\nReferrer-Policy: strict-origin-when-cross-origin\nPermissions-Policy: geolocation=(), microphone=(), camera=()\n</code></pre>"},{"location":"api-guidelines/security/#api-keys","title":"API Keys","text":""},{"location":"api-guidelines/security/#best-practices_1","title":"Best Practices","text":"<ul> <li>Don't use API keys for user authentication</li> <li>Rotate keys regularly</li> <li>Set appropriate permissions and restrictions</li> <li>Monitor and audit key usage</li> <li>Implement key revocation</li> </ul>"},{"location":"api-guidelines/security/#example-api-key-middleware","title":"Example API Key Middleware","text":"<pre><code>async function validateApiKey(req, res, next) {\n  const apiKey = req.headers['x-api-key'];\n  if (!apiKey) {\n    return res.status(401).json({\n      error: {\n        code: 'UNAUTHORIZED',\n        message: 'API key is required'\n      }\n    });\n  }\n\n  try {\n    const keyInfo = await db.apiKeys.findByKey(apiKey);\n    if (!keyInfo || keyInfo.revoked) {\n      throw new Error('Invalid API key');\n    }\n\n    // Check rate limits\n    if (await isRateLimited(keyInfo.id)) {\n      return res.status(429).json({\n        error: {\n          code: 'RATE_LIMIT_EXCEEDED',\n          message: 'Too many requests'\n        }\n      });\n    }\n\n    // Attach key info to request\n    req.apiKey = keyInfo;\n    next();\n  } catch (error) {\n    return res.status(401).json({\n      error: {\n        code: 'INVALID_API_KEY',\n        message: 'Invalid or revoked API key'\n      }\n    });\n  }\n}\n</code></pre>"},{"location":"api-guidelines/security/#vulnerability-management","title":"Vulnerability Management","text":""},{"location":"api-guidelines/security/#practices","title":"Practices","text":"<ul> <li>Keep dependencies updated</li> <li>Use dependency vulnerability scanning (npm audit, Snyk, Dependabot)</li> <li>Perform regular security audits</li> <li>Implement a bug bounty program</li> <li>Follow responsible disclosure policies</li> </ul>"},{"location":"api-guidelines/security/#example-npmrc-for-secure-installs","title":"Example .npmrc for Secure Installs","text":"<pre><code># Prevent executing arbitrary code during package install\nignore-scripts=true\n\n# Always use HTTPS for registry\nregistry=https://registry.npmjs.org/\n\n# Use strict SSL\nstrict-ssl=true\n\n# Use package-lock.json\npackage-lock=true\n</code></pre>"},{"location":"api-guidelines/security/#security-testing","title":"Security Testing","text":""},{"location":"api-guidelines/security/#testing-types","title":"Testing Types","text":"<ul> <li>Static Application Security Testing (SAST)</li> <li>Dynamic Application Security Testing (DAST)</li> <li>Software Composition Analysis (SCA)</li> <li>Penetration testing</li> <li>Security code reviews</li> </ul>"},{"location":"api-guidelines/security/#owasp-top-10-coverage","title":"OWASP Top 10 Coverage","text":"<ol> <li>Injection: Use parameterized queries, ORMs</li> <li>Broken Authentication: Implement proper auth flows, MFA</li> <li>Sensitive Data Exposure: Encrypt data, use secure protocols</li> <li>XML External Entities (XXE): Disable XML external entities</li> <li>Broken Access Control: Implement proper authorization checks</li> <li>Security Misconfiguration: Harden configurations, disable debug modes</li> <li>Cross-Site Scripting (XSS): Output encoding, Content Security Policy</li> <li>Insecure Deserialization: Validate input, use safe serializers</li> <li>Using Components with Known Vulnerabilities: Regular updates, SCA tools</li> <li>Insufficient Logging &amp; Monitoring: Comprehensive logging, alerting</li> </ol>"},{"location":"api-guidelines/security/#incident-response","title":"Incident Response","text":""},{"location":"api-guidelines/security/#response-plan","title":"Response Plan","text":"<ol> <li>Preparation: Document procedures, assign roles</li> <li>Detection &amp; Analysis: Monitor logs, detect anomalies</li> <li>Containment: Isolate affected systems</li> <li>Eradication: Remove threat, patch vulnerabilities</li> <li>Recovery: Restore services, verify integrity</li> <li>Post-Incident: Document lessons, update policies</li> </ol>"},{"location":"api-guidelines/security/#example-security-headers-for-apis","title":"Example Security Headers for APIs","text":"<pre><code># Prevent MIME type sniffing\nX-Content-Type-Options: nosniff\n\n# Prevent clickjacking\nX-Frame-Options: DENY\n\n# Enable XSS filter\nX-XSS-Protection: 1; mode=block\n\n# Content Security Policy\nContent-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.example.com; style-src 'self' 'unsafe-inline'; img-src 'self' data:;\n\n# Prevent iframe embedding\nX-Permitted-Cross-Domain-Policies: none\n\n# Disable caching for sensitive endpoints\nCache-Control: no-store, no-cache, must-revalidate, proxy-revalidate\nPragma: no-cache\nExpires: 0\n</code></pre>"},{"location":"api-guidelines/security/#secure-development-lifecycle-sdl","title":"Secure Development Lifecycle (SDL)","text":""},{"location":"api-guidelines/security/#phases","title":"Phases","text":"<ol> <li>Training: Security awareness for developers</li> <li>Requirements: Define security requirements</li> <li>Design: Threat modeling, security architecture</li> <li>Implementation: Secure coding practices</li> <li>Verification: Code review, security testing</li> <li>Release: Security review, sign-off</li> <li>Response: Incident response plan</li> </ol>"},{"location":"api-guidelines/security/#security-checklist-for-code-review","title":"Security Checklist for Code Review","text":"<ul> <li>[ ] Input validation and output encoding</li> <li>[ ] Authentication and session management</li> <li>[ ] Authorization checks</li> <li>[ ] Secure configuration</li> <li>[ ] Cryptography usage</li> <li>[ ] Error handling and logging</li> <li>[ ] Data protection</li> <li>[ ] Communication security</li> <li>[ ] File operations</li> <li>[ ] Memory management</li> </ul>"},{"location":"api-guidelines/security/#security-headers-for-different-server-types","title":"Security Headers for Different Server Types","text":""},{"location":"api-guidelines/security/#nginx","title":"Nginx","text":"<pre><code>add_header X-Content-Type-Options nosniff;\nadd_header X-Frame-Options DENY;\nadd_header X-XSS-Protection \"1; mode=block\";\nadd_header Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.example.com; style-src 'self' 'unsafe-inline';\";\nadd_header Referrer-Policy \"strict-origin-when-cross-origin\";\nadd_header Permissions-Policy \"geolocation=(), microphone=(), camera=()\";\n</code></pre>"},{"location":"api-guidelines/security/#apache","title":"Apache","text":"<pre><code>Header set X-Content-Type-Options \"nosniff\"\nHeader set X-Frame-Options \"DENY\"\nHeader set X-XSS-Protection \"1; mode=block\"\nHeader set Content-Security-Policy \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' cdn.example.com; style-src 'self' 'unsafe-inline';\"\nHeader set Referrer-Policy \"strict-origin-when-cross-origin\"\nHeader set Permissions-Policy \"geolocation=(), microphone=(), camera=()\"\n</code></pre>"},{"location":"api-guidelines/security/#expressjs","title":"Express.js","text":"<pre><code>const helmet = require('helmet');\n\napp.use(helmet());\napp.use(helmet.permittedCrossDomainPolicies());\napp.use(helmet.referrerPolicy({ policy: 'same-origin' }));\napp.use(\n  helmet.contentSecurityPolicy({\n    directives: {\n      defaultSrc: [\"'self'\"],\n      scriptSrc: [\"'self'\"],\n      styleSrc: [\"'self'\"],\n      imgSrc: [\"'self'\"],\n      connectSrc: [\"'self'\"],\n      fontSrc: [\"'self'\"],\n      objectSrc: [\"'none'\"],\n      mediaSrc: [\"'self'\"],\n      frameSrc: [\"'none'\"],\n    },\n  })\n);\n</code></pre>"},{"location":"api-guidelines/security/#secure-api-design-principles","title":"Secure API Design Principles","text":""},{"location":"api-guidelines/security/#principles","title":"Principles","text":"<ol> <li>Least Privilege: Grant minimum necessary permissions</li> <li>Defense in Depth: Multiple layers of security</li> <li>Fail Securely: Default deny, safe error messages</li> <li>Keep It Simple: Reduce attack surface</li> <li>Secure by Default: Secure configurations out of the box</li> <li>Separation of Duties: Divide responsibilities</li> <li>Audit Trails: Comprehensive logging</li> <li>Privacy by Design: Data protection from the start</li> <li>Keep Security Up-to-Date: Regular updates and patches</li> <li>Assume Breach: Plan for security incidents</li> </ol>"},{"location":"api-guidelines/versioning/","title":"API Versioning Guidelines","text":""},{"location":"api-guidelines/versioning/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Versioning Strategies</li> <li>URI Versioning</li> <li>Header Versioning</li> <li>Media Type Versioning</li> <li>Semantic Versioning</li> <li>Deprecation Policy</li> <li>Versioning Best Practices</li> <li>Migration Strategy</li> <li>Versioning Examples</li> <li>API Evolution</li> </ol>"},{"location":"api-guidelines/versioning/#versioning-strategies","title":"Versioning Strategies","text":""},{"location":"api-guidelines/versioning/#uri-versioning","title":"URI Versioning","text":"<pre><code>https://api.dexaminds.com/v1/users\nhttps://api.dexaminds.com/v2/users\n</code></pre>"},{"location":"api-guidelines/versioning/#header-versioning","title":"Header Versioning","text":"<pre><code>GET /users HTTP/1.1\nHost: api.dexaminds.com\nAccept: application/json\nAPI-Version: 2023-07-01\n</code></pre>"},{"location":"api-guidelines/versioning/#media-type-versioning","title":"Media Type Versioning","text":"<pre><code>GET /users HTTP/1.1\nHost: api.dexaminds.com\nAccept: application/vnd.dexaminds.v1+json\n</code></pre>"},{"location":"api-guidelines/versioning/#uri-versioning_1","title":"URI Versioning","text":""},{"location":"api-guidelines/versioning/#advantages","title":"Advantages","text":"<ul> <li>Simple to understand and implement</li> <li>Easy to debug</li> <li>Clear separation between versions</li> </ul>"},{"location":"api-guidelines/versioning/#disadvantages","title":"Disadvantages","text":"<ul> <li>Pollutes the URI space</li> <li>Breaks URI consistency</li> <li>Harder to evolve incrementally</li> </ul>"},{"location":"api-guidelines/versioning/#implementation","title":"Implementation","text":"<pre><code># Major version in path\nhttps://api.dexaminds.com/v1/users\nhttps://api.dexaminds.com/v2/users\n\n# With minor version\nhttps://api.dexaminds.com/v1.1/users\n</code></pre>"},{"location":"api-guidelines/versioning/#header-versioning_1","title":"Header Versioning","text":""},{"location":"api-guidelines/versioning/#advantages_1","title":"Advantages","text":"<ul> <li>Clean URIs</li> <li>More flexible versioning</li> <li>Better for caching</li> </ul>"},{"location":"api-guidelines/versioning/#disadvantages_1","title":"Disadvantages","text":"<ul> <li>Harder to test with simple tools</li> <li>Less discoverable</li> </ul>"},{"location":"api-guidelines/versioning/#implementation_1","title":"Implementation","text":"<pre><code># Custom header\nGET /users HTTP/1.1\nHost: api.dexaminds.com\nAccept: application/json\nX-API-Version: 1.0\n\n# Standard header\nGET /users HTTP/1.1\nHost: api.dexaminds.com\nAccept: application/json;version=1.0\n</code></pre>"},{"location":"api-guidelines/versioning/#media-type-versioning_1","title":"Media Type Versioning","text":""},{"location":"api-guidelines/versioning/#advantages_2","title":"Advantages","text":"<ul> <li>RESTful approach</li> <li>Version in content type</li> <li>Supports content negotiation</li> </ul>"},{"location":"api-guidelines/versioning/#disadvantages_2","title":"Disadvantages","text":"<ul> <li>More complex to implement</li> <li>Less common in the wild</li> </ul>"},{"location":"api-guidelines/versioning/#implementation_2","title":"Implementation","text":"<pre><code># Request with versioned media type\nGET /users HTTP/1.1\nHost: api.dexaminds.com\nAccept: application/vnd.dexaminds.v1+json\n\n# Response\nHTTP/1.1 200 OK\nContent-Type: application/vnd.dexaminds.v1+json\n</code></pre>"},{"location":"api-guidelines/versioning/#semantic-versioning","title":"Semantic Versioning","text":""},{"location":"api-guidelines/versioning/#version-format-majorminorpatch","title":"Version Format: MAJOR.MINOR.PATCH","text":"<ul> <li>MAJOR: Incompatible API changes</li> <li>MINOR: Backward-compatible functionality</li> <li>PATCH: Backward-compatible bug fixes</li> </ul>"},{"location":"api-guidelines/versioning/#examples","title":"Examples","text":"<ul> <li><code>1.0.0</code>: First stable release</li> <li><code>1.0.1</code>: Bug fix release</li> <li><code>1.1.0</code>: New backward-compatible features</li> <li><code>2.0.0</code>: Breaking changes</li> </ul>"},{"location":"api-guidelines/versioning/#deprecation-policy","title":"Deprecation Policy","text":""},{"location":"api-guidelines/versioning/#deprecation-timeline","title":"Deprecation Timeline","text":"<ol> <li>Announcement: Mark API as deprecated in documentation</li> <li>Warning Headers: Include <code>Deprecation</code> and <code>Sunset</code> headers</li> <li>Grace Period: Minimum 6 months before removal</li> <li>Removal: Remove deprecated endpoints in next major version</li> </ol>"},{"location":"api-guidelines/versioning/#deprecation-headers","title":"Deprecation Headers","text":"<pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDeprecation: true\nLink: &lt;https://api.dexaminds.com/docs/deprecation-policy&gt;; rel=\"deprecation\"; type=\"text/html\"\nSunset: Wed, 30 Jun 2026 12:00:00 GMT\n</code></pre>"},{"location":"api-guidelines/versioning/#versioning-best-practices","title":"Versioning Best Practices","text":""},{"location":"api-guidelines/versioning/#1-version-early-version-often","title":"1. Version Early, Version Often","text":"<ul> <li>Start with version 1.0.0 from day one</li> <li>Don\u2019t wait until you have breaking changes</li> </ul>"},{"location":"api-guidelines/versioning/#2-avoid-breaking-changes","title":"2. Avoid Breaking Changes","text":"<ul> <li>Add new fields instead of changing existing ones</li> <li>Make all fields optional when possible</li> <li>Use feature flags for experimental features</li> </ul>"},{"location":"api-guidelines/versioning/#3-document-thoroughly","title":"3. Document Thoroughly","text":"<ul> <li>Document all versions</li> <li>Include migration guides</li> <li>Provide code samples for each version</li> </ul>"},{"location":"api-guidelines/versioning/#4-use-semantic-versioning","title":"4. Use Semantic Versioning","text":"<ul> <li>Follow MAJOR.MINOR.PATCH</li> <li>Update versions based on changes</li> <li>Document version changes in changelog</li> </ul>"},{"location":"api-guidelines/versioning/#5-plan-for-deprecation","title":"5. Plan for Deprecation","text":"<ul> <li>Have a clear deprecation policy</li> <li>Give users time to migrate</li> <li>Provide migration tools when possible</li> </ul>"},{"location":"api-guidelines/versioning/#migration-strategy","title":"Migration Strategy","text":""},{"location":"api-guidelines/versioning/#1-parallel-run","title":"1. Parallel Run","text":"<ul> <li>Run multiple versions in parallel</li> <li>Gradually migrate consumers</li> <li>Monitor usage statistics</li> </ul>"},{"location":"api-guidelines/versioning/#2-feature-toggles","title":"2. Feature Toggles","text":"<ul> <li>Use feature flags for new functionality</li> <li>Enable/disable features per request</li> <li>Gradually roll out changes</li> </ul>"},{"location":"api-guidelines/versioning/#3-api-gateway","title":"3. API Gateway","text":"<ul> <li>Route requests based on version</li> <li>Transform requests/responses</li> <li>Handle version-specific endpoints</li> </ul>"},{"location":"api-guidelines/versioning/#versioning-examples","title":"Versioning Examples","text":""},{"location":"api-guidelines/versioning/#request-versioning","title":"Request Versioning","text":"<pre><code># URI Versioning\nGET /v1/users/123\n\n# Header Versioning\nGET /users/123\nAccept-Version: 1.0.0\n\n# Media Type Versioning\nGET /users/123\nAccept: application/vnd.dexaminds.v1+json\n</code></pre>"},{"location":"api-guidelines/versioning/#response-versioning","title":"Response Versioning","text":"<pre><code>HTTP/1.1 200 OK\nContent-Type: application/vnd.dexaminds.v1+json\nAPI-Version: 1.0.0\n\n{\n  \"id\": \"123\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\"\n}\n</code></pre>"},{"location":"api-guidelines/versioning/#api-evolution","title":"API Evolution","text":""},{"location":"api-guidelines/versioning/#non-breaking-changes","title":"Non-breaking Changes","text":"<ul> <li>Adding new endpoints</li> <li>Adding new optional request parameters</li> <li>Adding new fields to responses</li> <li>Adding new enum values</li> <li>Changing the order of fields</li> </ul>"},{"location":"api-guidelines/versioning/#breaking-changes","title":"Breaking Changes","text":"<ul> <li>Removing or renaming endpoints</li> <li>Removing or renaming fields</li> <li>Changing field types</li> <li>Making required fields optional</li> <li>Changing authentication/authorization</li> <li>Changing error formats</li> </ul>"},{"location":"api-guidelines/versioning/#versioning-in-practice","title":"Versioning in Practice","text":""},{"location":"api-guidelines/versioning/#current-version-v1","title":"Current Version (v1)","text":"<pre><code>{\n  \"id\": \"123\",\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\"\n}\n</code></pre>"},{"location":"api-guidelines/versioning/#new-version-v2","title":"New Version (v2)","text":"<pre><code>{\n  \"id\": \"123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john@example.com\",\n  \"metadata\": {\n    \"createdAt\": \"2023-01-01T00:00:00Z\",\n    \"updatedAt\": \"2023-06-30T12:00:00Z\"\n  }\n}\n</code></pre>"},{"location":"api-guidelines/versioning/#migration-path","title":"Migration Path","text":"<ol> <li>Add new fields to v1</li> <li>Update clients to handle both formats</li> <li>Release v2 with new structure</li> <li>Migrate clients to v2</li> <li>Deprecate v1 after migration period</li> </ol>"},{"location":"api-guidelines/versioning/#versioning-in-openapiswagger","title":"Versioning in OpenAPI/Swagger","text":""},{"location":"api-guidelines/versioning/#versioned-api-definition","title":"Versioned API Definition","text":"<pre><code>openapi: 3.0.0\ninfo:\n  title: User API\n  version: 1.0.0\n  description: API for managing users\nservers:\n  - url: https://api.dexaminds.com/v1\n    description: Version 1 API\n  - url: https://api.dexaminds.com/v2\n    description: Version 2 API (beta)\n</code></pre>"},{"location":"api-guidelines/versioning/#versioned-paths","title":"Versioned Paths","text":"<pre><code>paths:\n  /v1/users:\n    get:\n      summary: Get all users (v1)\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserV1'\n\n  /v2/users:\n    get:\n      summary: Get all users (v2)\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserV2'\n</code></pre>"},{"location":"api-guidelines/versioning/#monitoring-and-analytics","title":"Monitoring and Analytics","text":""},{"location":"api-guidelines/versioning/#track-usage-by-version","title":"Track Usage by Version","text":"<ul> <li>Monitor API usage per version</li> <li>Track adoption rate of new versions</li> <li>Identify deprecated endpoints still in use</li> <li>Set up alerts for deprecated endpoint usage</li> </ul>"},{"location":"api-guidelines/versioning/#metrics-to-monitor","title":"Metrics to Monitor","text":"<ul> <li>Request count by version</li> <li>Error rate by version</li> <li>Response time by version</li> <li>Endpoint usage by version</li> <li>Client versions in use</li> </ul>"},{"location":"api-guidelines/versioning/#versioning-in-practice-case-study","title":"Versioning in Practice: Case Study","text":""},{"location":"api-guidelines/versioning/#initial-release-v100","title":"Initial Release (v1.0.0)","text":"<pre><code>{\n  \"id\": \"123\",\n  \"username\": \"johndoe\",\n  \"email\": \"john@example.com\"\n}\n</code></pre>"},{"location":"api-guidelines/versioning/#new-features-v110","title":"New Features (v1.1.0)","text":"<ul> <li>Added <code>createdAt</code> field</li> <li>Added <code>status</code> field (ACTIVE, INACTIVE)</li> <li>New endpoint: <code>GET /users/{id}/preferences</code></li> </ul>"},{"location":"api-guidelines/versioning/#breaking-changes-v200","title":"Breaking Changes (v2.0.0)","text":"<ul> <li>Split <code>username</code> into <code>firstName</code> and <code>lastName</code></li> <li>Removed <code>username</code> field</li> <li>New authentication requirements</li> <li>Updated error response format</li> </ul>"},{"location":"api-guidelines/versioning/#migration-strategy_1","title":"Migration Strategy","text":"<ol> <li>Release v1.1.0 with new fields</li> <li>Update documentation to show new structure</li> <li>Provide migration guide from v1 to v2</li> <li>Run v1 and v2 in parallel for 12 months</li> <li>Notify users of v1 deprecation</li> <li>Remove v1 endpoints after deprecation period</li> </ol>"},{"location":"api-guidelines/versioning/#versioning-in-microservices","title":"Versioning in Microservices","text":""},{"location":"api-guidelines/versioning/#api-gateway","title":"API Gateway","text":"<pre><code>Client \u2192 API Gateway \u2192 v1 Service\n                  \\-&gt; v2 Service\n</code></pre>"},{"location":"api-guidelines/versioning/#service-mesh","title":"Service Mesh","text":"<pre><code>Client \u2192 Ingress \u2192 Service Mesh \u2192 v1 Pods\n                           \\-&gt; v2 Pods\n</code></pre>"},{"location":"api-guidelines/versioning/#canary-deployments","title":"Canary Deployments","text":"<ul> <li>Route small percentage of traffic to new version</li> <li>Gradually increase traffic</li> <li>Roll back if issues detected</li> </ul>"},{"location":"api-guidelines/versioning/#versioning-checklist","title":"Versioning Checklist","text":""},{"location":"api-guidelines/versioning/#planning","title":"Planning","text":"<ul> <li>Choose versioning strategy</li> <li>Document versioning policy</li> <li>Plan for backwards compatibility</li> <li>Set up monitoring</li> </ul>"},{"location":"api-guidelines/versioning/#implementation_3","title":"Implementation","text":"<ul> <li>Add version to API</li> <li>Update documentation</li> <li>Implement deprecation headers</li> <li>Set up analytics</li> </ul>"},{"location":"api-guidelines/versioning/#maintenance","title":"Maintenance","text":"<ul> <li>Monitor version usage</li> <li>Plan deprecation timeline</li> <li>Communicate changes to users</li> <li>Provide migration tools</li> </ul>"},{"location":"api-guidelines/versioning/#final-recommendations","title":"Final Recommendations","text":"<ol> <li>Be Consistent: Choose one versioning strategy and stick with it</li> <li>Document Everything: Keep detailed changelogs and migration guides</li> <li>Plan for the Future: Design APIs with evolution in mind</li> <li>Monitor Usage: Track which versions are being used</li> <li>Communicate Changes: Keep users informed about updates and deprecations</li> <li>Be Patient: Give users time to migrate between versions</li> <li>Automate Testing: Test all versions automatically</li> <li>Consider Tooling: Use API gateways and service meshes to manage versions</li> </ol>"},{"location":"engineering-handbook/","title":"\ud83c\udfd7\ufe0f Engineering Handbook","text":"<p>Welcome to the Engineering Handbook! This repository serves as the central hub for our engineering standards, best practices, and team guidelines. It's designed to help our team maintain consistency, quality, and efficiency across all our engineering efforts.</p>"},{"location":"engineering-handbook/#table-of-contents","title":"\ud83d\udcda Table of Contents","text":"<ol> <li>Coding Standards - Language-specific coding guidelines and best practices</li> <li>Development Practices - Our approach to software development and delivery</li> <li>Team Culture - Our engineering values and collaboration guidelines</li> <li>Career Growth - Our career growth and development guidelines</li> </ol>"},{"location":"engineering-handbook/#purpose","title":"\ud83c\udfaf Purpose","text":"<p>This handbook is a living document that evolves with our team and technology stack. It's intended to:</p> <ul> <li>Provide clear guidelines for maintaining code quality</li> <li>Document our engineering processes and best practices</li> <li>Help onboard new team members efficiently</li> <li>Serve as a reference for technical decision-making</li> </ul>"},{"location":"engineering-handbook/#how-to-use-this-handbook","title":"\ud83d\udee0 How to Use This Handbook","text":"<ol> <li>For New Team Members: Start with the Onboarding Guide</li> <li>Questions? Reach out to the engineering leadership team</li> </ol>"},{"location":"engineering-handbook/#keeping-this-handbook-updated","title":"\ud83d\udd04 Keeping This Handbook Updated","text":"<p>We encourage all team members to contribute to this handbook. If you find something that's outdated or missing, please submit a pull request or create an issue.</p>"},{"location":"engineering-handbook/coding-standards/","title":"\ud83d\udcdd Coding Standards","text":"<p>This directory contains language-specific coding standards and guidelines for the engineering team. Consistent coding standards help maintain code quality, readability, and collaboration across our codebase.</p>"},{"location":"engineering-handbook/coding-standards/#available-standards","title":"\ud83d\udcda Available Standards","text":"<ol> <li> <p>JavaScript    Guidelines for JavaScript/TypeScript development, including formatting, naming conventions, and best practices.</p> </li> <li> <p>Python    Python coding standards covering style, documentation, and common patterns.</p> </li> </ol>"},{"location":"engineering-handbook/coding-standards/#general-principles","title":"\ud83c\udfaf General Principles","text":"<ol> <li>Readability First</li> <li>Code is read more often than written</li> <li>Favor clarity over cleverness</li> <li> <p>Use meaningful names</p> </li> <li> <p>Consistency</p> </li> <li>Follow the style of existing code</li> <li>Be consistent within a file</li> <li> <p>Be consistent with the language's idioms</p> </li> <li> <p>Documentation</p> </li> <li>Document public APIs</li> <li>Include examples for complex logic</li> <li>Keep comments up-to-date</li> </ol>"},{"location":"engineering-handbook/coding-standards/#tools","title":"\ud83d\udee0 Tools","text":""},{"location":"engineering-handbook/coding-standards/#javascripttypescript","title":"JavaScript/TypeScript","text":"<ul> <li>Linter: ESLint</li> <li>Formatter: Prettier</li> <li>Type Checking: TypeScript</li> </ul>"},{"location":"engineering-handbook/coding-standards/#python","title":"Python","text":"<ul> <li>Linter: flake8</li> <li>Formatter: Black</li> <li>Import Sorter: isort</li> </ul>"},{"location":"engineering-handbook/coding-standards/#code-review-guidelines","title":"\ud83d\udd04 Code Review Guidelines","text":"<p>When reviewing code, check for: - Adherence to these standards - Consistent style with the codebase - Clear and helpful comments - Proper error handling - Test coverage</p>"},{"location":"engineering-handbook/coding-standards/#adding-new-standards","title":"\ud83d\udcdd Adding New Standards","text":"<p>To add or update coding standards: 1. Update the appropriate language file 2. Include examples of both good and bad patterns 3. Get approval from the engineering team 4. Update this README if needed</p>"},{"location":"engineering-handbook/coding-standards/#need-help","title":"\u2753 Need Help?","text":"<ul> <li>For JavaScript/TypeScript questions: #frontend-help</li> <li>For Python questions: #backend-help</li> <li>For general coding standards: #engineering-standards</li> </ul> <p>Last Updated: June 2025</p>"},{"location":"engineering-handbook/coding-standards/javascript/","title":"JavaScript","text":""},{"location":"engineering-handbook/coding-standards/javascript/#javascript-coding-standards-dexaminds","title":"\ud83d\udcbb JavaScript Coding Standards (DexaMinds)","text":""},{"location":"engineering-handbook/coding-standards/javascript/#1-general-guidelines","title":"1. General Guidelines","text":"<ul> <li>Follow the Airbnb Style Guide</li> <li>Use <code>const</code> and <code>let</code> (avoid <code>var</code>)</li> <li>Prefer modern ES6+ features</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#2-file-and-variable-naming","title":"2. File and Variable Naming","text":"<ul> <li>Use <code>camelCase</code> for variables/functions</li> <li>Use <code>PascalCase</code> for components/classes</li> <li>File names: <code>kebab-case.js</code> (e.g., <code>user-profile.js</code>)</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#3-formatting","title":"3. Formatting","text":"<ul> <li>2-space indentation</li> <li>Always use semicolons</li> <li>Prefer single quotes</li> <li>Use trailing commas in multi-line objects/arrays</li> </ul> <pre><code>const user = {\n  name: 'Alice',\n  age: 30,\n};\n</code></pre>"},{"location":"engineering-handbook/coding-standards/javascript/#4-functions","title":"4. Functions","text":"<ul> <li>Use arrow functions for anonymous and short functions</li> </ul> <pre><code>const greet = name =&gt; `Hello, ${name}`;\n</code></pre> <ul> <li>Avoid deeply nested callbacks (prefer async/await or Promises)</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#5-comments-documentation","title":"5. Comments &amp; Documentation","text":"<ul> <li>Use <code>//</code> for single-line, <code>/** */</code> for multi-line</li> <li>Use JSDoc for public functions</li> </ul> <pre><code>/**\n * Calculate sum of two numbers.\n * @param {number} a - First number\n * @param {number} b - Second number\n * @returns {number}\n */\nfunction add(a, b) {\n  return a + b;\n}\n</code></pre>"},{"location":"engineering-handbook/coding-standards/javascript/#6-objects-arrays","title":"6. Objects &amp; Arrays","text":"<ul> <li>Use destructuring where appropriate</li> </ul> <pre><code>const { name, age } = user;\n</code></pre> <ul> <li>Avoid mutation \u2014 prefer immutable updates</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#7-error-handling","title":"7. Error Handling","text":"<ul> <li>Store constants and helper functions in their own files</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#8-state-management","title":"8. State Management","text":"<ul> <li>Use state management libraries (Redux, Context API) for global state</li> <li>Keep state as local as possible, lift state up when needed</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#9-performance-optimization","title":"9. Performance Optimization","text":"<ul> <li>Use <code>useMemo</code> and <code>useCallback</code> for expensive calculations and callbacks</li> <li>Implement code splitting for large applications</li> <li>Use <code>React.memo</code> for preventing unnecessary re-renders</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#10-security-practices","title":"10. Security Practices","text":"<ul> <li>Sanitize all user inputs</li> <li>Use environment variables for sensitive data</li> <li>Implement proper CORS policies</li> <li>Use Content Security Policy (CSP) headers</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#11-testing","title":"11. Testing","text":"<ul> <li>Write unit tests with Jest</li> <li>Aim for 80%+ test coverage</li> <li>Test user interactions with React Testing Library</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#12-error-boundaries","title":"12. Error Boundaries","text":"<ul> <li>Implement error boundaries to catch JavaScript errors</li> <li>Provide fallback UIs for better user experience</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#13-accessibility-a11y","title":"13. Accessibility (a11y)","text":"<ul> <li>Use semantic HTML elements</li> <li>Add proper ARIA attributes</li> <li>Ensure keyboard navigation works</li> <li>Test with screen readers</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#14-code-organization","title":"14. Code Organization","text":"<ul> <li>Follow the \"Feature First\" folder structure</li> <li>Keep related files together (component + styles + tests)</li> <li>Separate business logic from UI components</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#15-performance-monitoring","title":"15. Performance Monitoring","text":"<ul> <li>Implement error tracking (Sentry, LogRocket)</li> <li>Monitor Core Web Vitals</li> <li>Use React DevTools Profiler</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#16-internationalization-i18n","title":"16. Internationalization (i18n)","text":"<ul> <li>Externalize all UI strings</li> <li>Use libraries like react-i18next</li> <li>Consider RTL (Right-to-Left) layouts</li> </ul>"},{"location":"engineering-handbook/coding-standards/javascript/#17-code-reviews","title":"17. Code Reviews","text":"<ul> <li>Keep PRs small and focused</li> <li>Include screenshots for UI changes</li> <li>Address all review comments before merging</li> <li>Use meaningful commit messages</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/","title":"Python","text":""},{"location":"engineering-handbook/coding-standards/python/#python-coding-standards-dexaminds","title":"\ud83d\udc0d Python Coding Standards (DexaMinds)","text":""},{"location":"engineering-handbook/coding-standards/python/#1-general-guidelines","title":"1. General Guidelines","text":"<ul> <li>Follow PEP 8</li> <li>Max line length: 79 characters</li> <li>Prefer clarity over cleverness</li> <li>Avoid magic numbers, use named constants</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#2-file-naming","title":"2. File Naming","text":"<ul> <li>Use <code>snake_case</code> for Python file names, e.g., <code>data_loader.py</code></li> <li>Avoid dashes or capital letters in filenames</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#3-indentation-and-spacing","title":"3. Indentation and Spacing","text":"<ul> <li>Use 4 spaces for indentation (no tabs)</li> <li>Add blank lines between top-level functions and classes</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#4-imports","title":"4. Imports","text":"<ul> <li>Standard library imports first, then third-party, then project-specific</li> <li>Use absolute imports when possible</li> </ul> <pre><code># Good\nimport os\nimport pandas as pd\nfrom myproject.utils import helper\n</code></pre>"},{"location":"engineering-handbook/coding-standards/python/#5-docstrings","title":"5. Docstrings","text":"<ul> <li>Use triple double-quoted strings <code>\"\"\"</code> per PEP 257</li> </ul> <pre><code>def fetch_data(source: str) -&gt; dict:\n    \"\"\"\n    Fetch data from a specified source.\n\n    Args:\n        source (str): The data source path.\n\n    Returns:\n        dict: Parsed data from the source.\n    \"\"\"\n    pass\n</code></pre>"},{"location":"engineering-handbook/coding-standards/python/#6-naming-conventions","title":"6. Naming Conventions","text":"<ul> <li><code>snake_case</code> for variables/functions</li> <li><code>UPPER_CASE</code> for constants</li> <li><code>PascalCase</code> for class names</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#7-functions","title":"7. Functions","text":"<ul> <li>Keep them short and focused</li> <li>Prefer keyword arguments for clarity</li> <li>Include type hints</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#8-classes","title":"8. Classes","text":"<ul> <li>Single responsibility per class</li> <li>Group related methods</li> <li>Use <code>__init__</code> constructor wisely</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#9-error-handling","title":"9. Error Handling","text":"<ul> <li>Use <code>try...except</code> blocks for error handling</li> <li>Dependency management: <code>pip-tools</code> or <code>poetry</code></li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#10-type-hinting","title":"10. Type Hinting","text":"<ul> <li>Use type hints for all function parameters and return values</li> <li>Leverage <code>typing</code> module for complex types</li> <li>Add <code># type: ignore</code> only when absolutely necessary</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#11-virtual-environments","title":"11. Virtual Environments","text":"<ul> <li>Always use virtual environments for project dependencies</li> <li>Document all dependencies in <code>requirements.txt</code> or <code>pyproject.toml</code></li> <li>Pin dependency versions for production</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#12-logging","title":"12. Logging","text":"<ul> <li>Use the <code>logging</code> module instead of print statements</li> <li>Configure appropriate log levels (DEBUG, INFO, WARNING, ERROR)</li> <li>Include contextual information in log messages</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#13-testing","title":"13. Testing","text":"<ul> <li>Write unit tests using <code>pytest</code></li> <li>Follow the Arrange-Act-Assert pattern</li> <li>Aim for 80%+ test coverage</li> <li>Use fixtures for test dependencies</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#14-performance","title":"14. Performance","text":"<ul> <li>Use list/dict comprehensions for simple loops</li> <li>Leverage generators for large datasets</li> <li>Profile code before optimizing (<code>cProfile</code>, <code>line_profiler</code>)</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#15-security","title":"15. Security","text":"<ul> <li>Use <code>secrets</code> module for cryptographic operations</li> <li>Sanitize all user inputs</li> <li>Avoid <code>eval()</code> and <code>exec()</code> with user input</li> <li>Use parameterized queries for database operations</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#16-documentation","title":"16. Documentation","text":"<ul> <li>Keep docstrings up-to-date with code changes</li> <li>Use Sphinx or MkDocs for project documentation</li> <li>Include examples in docstrings</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#17-code-quality","title":"17. Code Quality","text":"<ul> <li>Run linters (<code>pylint</code>, <code>flake8</code>) in CI/CD</li> <li>Use <code>black</code> for code formatting</li> <li>Run <code>mypy</code> for static type checking</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#18-concurrency","title":"18. Concurrency","text":"<ul> <li>Use <code>asyncio</code> for I/O-bound operations</li> <li>Prefer <code>concurrent.futures</code> for CPU-bound tasks</li> <li>Understand GIL limitations</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#19-error-handling","title":"19. Error Handling","text":"<ul> <li>Create custom exception classes for domain-specific errors</li> <li>Use context managers (<code>with</code> statement) for resource management</li> <li>Include error recovery mechanisms where possible</li> </ul>"},{"location":"engineering-handbook/coding-standards/python/#20-code-reviews","title":"20. Code Reviews","text":"<ul> <li>Keep PRs focused and small</li> <li>Include type hints in all new code</li> <li>Document any non-obvious decisions</li> <li>Update documentation when changing behavior</li> </ul>"},{"location":"engineering-handbook/development-practices/","title":"\ud83d\udee0 Development Practices","text":"<p>This directory contains documentation about our software development methodologies, workflows, and best practices. These guidelines help us maintain a consistent and efficient development process.</p>"},{"location":"engineering-handbook/development-practices/#available-documents","title":"\ud83d\udcda Available Documents","text":"<ol> <li> <p>Git Workflow    Our branching strategy, commit message conventions, and PR guidelines.</p> </li> <li> <p>Testing Strategy    Approaches to testing, including unit, integration, and end-to-end testing.</p> </li> </ol>"},{"location":"engineering-handbook/development-practices/#core-principles","title":"\ud83c\udfaf Core Principles","text":""},{"location":"engineering-handbook/development-practices/#1-version-control","title":"1. Version Control","text":"<ul> <li>Use feature branches for all changes</li> <li>Write meaningful commit messages</li> <li>Keep PRs small and focused</li> <li>Review all code before merging</li> </ul>"},{"location":"engineering-handbook/development-practices/#2-testing","title":"2. Testing","text":"<ul> <li>Write tests for all new features</li> <li>Maintain high test coverage</li> <li>Test in environments that match production</li> <li>Automate testing where possible</li> </ul>"},{"location":"engineering-handbook/development-practices/#3-documentation","title":"3. Documentation","text":"<ul> <li>Document public APIs</li> <li>Keep READMEs up to date</li> <li>Document architectural decisions</li> <li>Include setup instructions</li> </ul>"},{"location":"engineering-handbook/development-practices/#development-workflow","title":"\ud83d\udd04 Development Workflow","text":"<ol> <li>Plan</li> <li>Create an issue/ticket</li> <li>Define acceptance criteria</li> <li> <p>Break down large tasks</p> </li> <li> <p>Develop</p> </li> <li>Create a feature branch</li> <li>Follow coding standards</li> <li>Write tests</li> <li> <p>Document your changes</p> </li> <li> <p>Review</p> </li> <li>Open a pull request</li> <li>Request reviews</li> <li>Address feedback</li> <li> <p>Update documentation</p> </li> <li> <p>Deploy</p> </li> <li>Run all tests</li> <li>Get approvals</li> <li>Merge to main</li> <li>Deploy to production</li> </ol>"},{"location":"engineering-handbook/development-practices/#tools-we-use","title":"\ud83d\udee0 Tools We Use","text":"<ul> <li>Version Control: Git, GitHub</li> <li>CI/CD: GitHub Actions</li> <li>Code Review: GitHub Pull Requests</li> <li>Documentation: Markdown, MkDocs</li> <li>Project Management: Jira, Linear</li> </ul>"},{"location":"engineering-handbook/development-practices/#adding-new-practices","title":"\ud83d\udcdd Adding New Practices","text":"<p>To propose a new development practice: 1. Create a new markdown file 2. Follow the existing format 3. Include examples and rationale 4. Submit a PR for review 5. Present to the team</p>"},{"location":"engineering-handbook/development-practices/#need-help","title":"\u2753 Need Help?","text":"<ul> <li>For Git questions: #git-help</li> <li>For testing help: #testing-help</li> <li>For process questions: #engineering-processes</li> </ul> <p>Last Updated: June 2025</p>"},{"location":"engineering-handbook/development-practices/git-workflow/","title":"Git Workflow","text":""},{"location":"engineering-handbook/development-practices/git-workflow/#dexaminds-git-github-training-guide-using-git-bash","title":"\ud83e\udde0 DexaMinds Git &amp; GitHub Training Guide (Using Git Bash)","text":""},{"location":"engineering-handbook/development-practices/git-workflow/#1-initial-setup","title":"\ud83d\udd27 1. Initial Setup","text":""},{"location":"engineering-handbook/development-practices/git-workflow/#install-git","title":"\u2705 Install Git","text":"<ul> <li>Download from: https://git-scm.com/downloads</li> </ul>"},{"location":"engineering-handbook/development-practices/git-workflow/#configure-git","title":"\u2705 Configure Git","text":"<pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@dexaminds.com\"\ngit config --global core.editor \"code --wait\"\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#verify-configuration","title":"\u2705 Verify Configuration","text":"<pre><code>git config --list\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#2-repository-management","title":"\ud83d\udcc1 2. Repository Management","text":""},{"location":"engineering-handbook/development-practices/git-workflow/#clone-a-repository","title":"\u2705 Clone a Repository","text":"<pre><code>git clone https://github.com/your-org/repo-name.git\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#create-a-new-repository-local","title":"\u2705 Create a New Repository (Local)","text":"<pre><code>mkdir my-project\ncd my-project\ngit init\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#link-to-remote-repository","title":"\u2705 Link to Remote Repository","text":"<pre><code>git remote add origin https://github.com/your-org/repo-name.git\ngit push -u origin main\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#delete-a-local-repository","title":"\u274c Delete a Local Repository","text":"<pre><code>rm -rf my-project\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#3-branching-operations","title":"\ud83c\udf3f 3. Branching Operations","text":""},{"location":"engineering-handbook/development-practices/git-workflow/#create-a-new-branch","title":"\u2705 Create a New Branch","text":"<pre><code>git checkout -b feature/branch-name\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#switch-between-branches","title":"\ud83d\udd01 Switch Between Branches","text":"<pre><code>git checkout main\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#merge-a-branch","title":"\ud83d\udd00 Merge a Branch","text":"<pre><code>git checkout main\ngit merge feature/branch-name\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#delete-a-branch","title":"\u274c Delete a Branch","text":"<pre><code>git branch -d feature/branch-name\ngit branch -D feature/branch-name\n</code></pre>"},{"location":"engineering-handbook/development-practices/git-workflow/#4-commit-workflow","title":"\ud83d\udd01 4. Commit Workflow","text":"<p>This section outlines the standard Git commit workflow that every developer at DexaMinds should follow:</p>"},{"location":"engineering-handbook/development-practices/git-workflow/#step-by-step-commit-workflow","title":"\ud83e\udded Step-by-Step Commit Workflow","text":"<ol> <li> <p>Pull latest changes from the remote branch:    <code>bash    git pull origin branch-name</code></p> </li> <li> <p>Check status of your working directory:    <code>bash    git status</code></p> </li> <li> <p>Stage the changes you want to commit:    <code>bash    git add file-name    git add .</code></p> </li> <li> <p>Review staged changes (optional but recommended):    <code>bash    git diff --cached</code></p> </li> <li> <p>Commit with a meaningful message:    <code>bash    git commit -m \"feat: add login validation for user form\"</code></p> </li> <li> <p>Push your changes to the remote branch:    <code>bash    git push origin branch-name</code></p> </li> <li> <p>Create a Pull Request on GitHub and request review.</p> </li> </ol>"},{"location":"engineering-handbook/development-practices/git-workflow/#5-working-with-pull-requests-prs","title":"\ud83d\udd0d 5. Working with Pull Requests (PRs)","text":""},{"location":"engineering-handbook/development-practices/git-workflow/#create-a-pr","title":"\u2705 Create a PR","text":"<ol> <li>Push your branch to GitHub.</li> <li>Go to GitHub \u2192 Open your repo \u2192 Click \"Compare &amp; pull request\".</li> <li>Add title, description, reviewers, and submit.</li> </ol>"},{"location":"engineering-handbook/development-practices/git-workflow/#review-a-pr","title":"\u2705 Review a PR","text":"<ul> <li>Use GitHub UI to comment, approve, or request changes.</li> </ul>"},{"location":"engineering-handbook/development-practices/git-workflow/#merge-a-pr","title":"\u2705 Merge a PR","text":"<ul> <li>After approval, click \"Merge pull request\" on GitHub.</li> </ul>"},{"location":"engineering-handbook/development-practices/git-workflow/#6-best-practices","title":"\ud83e\uddea 6. Best Practices","text":"<ul> <li>Use meaningful branch names: <code>feature/login-page</code>, <code>fix/api-error</code></li> <li>Commit often with clear messages.</li> <li>Always pull before pushing.</li> <li>Delete merged branches to keep repo clean.</li> <li>Use <code>.gitignore</code> to avoid committing unnecessary files.</li> </ul>"},{"location":"engineering-handbook/development-practices/git-workflow/#common-git-commands-cheat-sheet","title":"\ud83d\udee0\ufe0f Common Git Commands Cheat Sheet","text":"Action Command Initialize repo <code>git init</code> Clone repo <code>git clone &lt;url&gt;</code> Check status <code>git status</code> Stage file <code>git add file-name</code> Stage all <code>git add .</code> Unstage file <code>git reset file-name</code> Commit <code>git commit -m \"message\"</code> Amend last commit <code>git commit --amend</code> View commit history <code>git log</code> View one-line log <code>git log --oneline</code> Create branch <code>git checkout -b branch-name</code> Switch branch <code>git checkout branch-name</code> Delete branch <code>git branch -d branch-name</code> Merge branch <code>git merge branch-name</code> Pull changes <code>git pull origin branch-name</code> Push changes <code>git push origin branch-name</code> View remote <code>git remote -v</code> Add remote <code>git remote add origin &lt;url&gt;</code> Remove remote <code>git remote remove origin</code>"},{"location":"engineering-handbook/development-practices/testing-strategy/","title":"Testing Strategy","text":"<p>At DexaMinds, we don\u2019t just write code \u2014 we engineer confidence. Testing is not an afterthought or a checkbox; it is a core pillar of how we deliver scalable, secure, and resilient software. Our testing strategy is designed to support rapid iteration without compromising stability, allowing us to move fast and ship with pride.</p>"},{"location":"engineering-handbook/development-practices/testing-strategy/#objectives","title":"\ud83c\udfaf Objectives","text":"<ul> <li>Ensure functional correctness, security, and performance of our applications.</li> <li>Enable fast feedback cycles through automation and continuous integration.</li> <li>Promote a shared sense of ownership and accountability for product quality.</li> <li>Encourage a test-first mindset to drive better architecture and design.</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#testing-pyramid","title":"\ud83e\uddf1 Testing Pyramid","text":"<p>We adopt a testing pyramid model that balances depth and speed, favoring a strong foundation of fast, reliable tests.</p> <pre><code>UI (End-to-End) Tests\n \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nIntegration Tests\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nUnit Tests\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>"},{"location":"engineering-handbook/development-practices/testing-strategy/#1-unit-tests-foundation","title":"1. Unit Tests (Foundation)","text":"<ul> <li>Purpose: Test individual functions, components, or classes in isolation.</li> <li>Tools: Jest, Mocha, JUnit, PyTest (language-specific)</li> <li>Best Practices:</li> <li>Cover edge cases and logic branches.</li> <li>Keep tests small, focused, and independent.</li> <li>Mock external dependencies (APIs, databases).</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#2-integration-tests","title":"2. Integration Tests","text":"<ul> <li>Purpose: Test interactions between modules (e.g., service layers and databases).</li> <li>Tools: Supertest, Postman/Newman, SpringBootTest, Testcontainers</li> <li>Best Practices:</li> <li>Simulate real-world workflows.</li> <li>Avoid excessive mocks to preserve integration realism.</li> <li>Run regularly as part of CI.</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#3-end-to-end-e2e-tests","title":"3. End-to-End (E2E) Tests","text":"<ul> <li>Purpose: Validate entire user flows and system behavior from the end-user perspective.</li> <li>Tools: Cypress, Playwright, Selenium</li> <li>Best Practices:</li> <li>Test critical paths (e.g., login, checkout, data entry).</li> <li>Avoid flakiness by managing test data and dependencies.</li> <li>Run on staging environments post-deployment.</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#test-lifecycle-in-cicd","title":"\ud83d\udd01 Test Lifecycle in CI/CD","text":"<p>Testing is seamlessly integrated into our CI/CD pipelines to ensure continuous quality:</p> Stage Test Type Trigger Pre-commit Linting, Unit Tests Developer local Pre-push / CI Unit + Integration Tests GitHub Actions / CI pipeline Pre-deploy E2E Tests Staging pipeline Post-deploy Smoke Tests, Monitoring Production"},{"location":"engineering-handbook/development-practices/testing-strategy/#specialized-testing","title":"\ud83e\uddea Specialized Testing","text":""},{"location":"engineering-handbook/development-practices/testing-strategy/#security-testing","title":"\ud83d\udee1\ufe0f Security Testing","text":"<ul> <li>Automated tools: OWASP ZAP, Snyk, Dependency Scanners</li> <li>Manual reviews for auth flows, role-based access, and input validation</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#performance-load-testing","title":"\u26a1 Performance &amp; Load Testing","text":"<ul> <li>Tools: k6, JMeter, Locust</li> <li>Run against staging before release cycles or after architectural changes</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#contract-testing","title":"\ud83e\uddec Contract Testing","text":"<ul> <li>Tools: Pact, Dredd</li> <li>Validates API agreements between microservices or frontend-backend interfaces</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#chaos-resilience-testing-optional-but-encouraged","title":"\ud83e\uddef Chaos &amp; Resilience Testing (optional but encouraged)","text":"<ul> <li>Tools: Gremlin, ChaosMonkey</li> <li>Ensure services degrade gracefully under stress or failure conditions</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#culture-of-testing","title":"\u2728 Culture of Testing","text":"<p>Testing is not just a responsibility \u2014 it\u2019s a mindset:</p> <ul> <li>Write tests as you write code, not afterward.</li> <li>Prioritize readability \u2014 future you and your team will thank you.</li> <li>Fail fast, fix fast \u2014 treat failed tests as opportunities to strengthen the system.</li> <li>Celebrate test coverage, but never sacrifice quality for numbers.</li> </ul>"},{"location":"engineering-handbook/development-practices/testing-strategy/#test-coverage-goals","title":"\u2705 Test Coverage Goals","text":"Type Minimum Coverage Unit 80%+ Integration 60%+ E2E Critical flows only (measured by business impact) <p>Note: Quality &gt; Quantity. 100% coverage with brittle or redundant tests can be more harmful than 80% meaningful coverage.</p>"},{"location":"engineering-handbook/development-practices/testing-strategy/#conclusion","title":"\ud83e\udded Conclusion","text":"<p>Our testing strategy ensures that every line of code we ship is reliable, maintainable, and ready for scale. In a fast-moving environment like DexaMinds, tests are not blockers \u2014 they are enablers. When we test well, we innovate with confidence.</p> <p>Let\u2019s continue to build boldly \u2014 with quality engineered at every step.</p>"},{"location":"internal-docs/","title":"\ud83d\udcda Documentation Hub","text":"<p>Welcome to the Documentation Hub! This directory serves as the central repository for all technical documentation, guides, and resources across our engineering organization.</p>"},{"location":"internal-docs/#directory-structure","title":"\ud83d\uddc2 Directory Structure","text":"<pre><code>docs/\n\u251c\u2500\u2500 architecture/     # System architecture and design documents\n\u251c\u2500\u2500 onboarding/       # Onboarding guides and resources\n\u251c\u2500\u2500 processes/        # Engineering processes and workflows\n\u251c\u2500\u2500 leads/            # Lead generation and management\n\u2514\u2500\u2500 tutorials/        # Step-by-step tutorials and how-tos\n</code></pre>"},{"location":"internal-docs/#quick-links","title":"\ud83d\udccb Quick Links","text":"<ul> <li>New to the team? Start with our Onboarding Guide</li> <li>Understanding our systems? Check out Architecture Docs</li> <li>Looking for processes? See Engineering Processes</li> <li>Need to generate leads? See Lead Generation</li> <li>Need to learn something new? Explore our Tutorials</li> </ul>"},{"location":"internal-docs/#documentation-standards","title":"\ud83d\udee0 Documentation Standards","text":""},{"location":"internal-docs/#writing-guidelines","title":"Writing Guidelines","text":"<ul> <li>Use clear, concise language</li> <li>Follow the Google Technical Writing Style Guide</li> <li>Maintain consistent formatting and structure</li> <li>Include relevant diagrams and examples</li> </ul>"},{"location":"internal-docs/#formatting","title":"Formatting","text":"<ul> <li>Use Markdown (<code>.md</code>) for all documentation</li> <li>Follow the Markdown Style Guide</li> <li>Use semantic line breaks for better version control diffs</li> </ul>"},{"location":"internal-docs/#maintaining-documentation","title":"\ud83d\udd04 Maintaining Documentation","text":"<ol> <li>Keep it current</li> <li>Update documentation when making related code changes</li> <li> <p>Review documentation regularly for accuracy</p> </li> <li> <p>Version Control</p> </li> <li>Document version compatibility</li> <li> <p>Use meaningful commit messages</p> </li> <li> <p>Accessibility</p> </li> <li>Use semantic structure (headings, lists, tables)</li> <li>Add alt text for images</li> <li>Ensure good color contrast</li> </ol>"},{"location":"internal-docs/#contributing","title":"\ud83e\udd1d Contributing","text":"<p>We welcome contributions to improve our documentation! Here's how you can help:</p> <ol> <li>Report Issues: Found something outdated or incorrect? Open an issue.</li> <li>Suggest Improvements: Have ideas to make our docs better? Share them!</li> <li>Submit Changes:</li> <li>Fork the repository</li> <li>Create a feature branch</li> <li>Make your changes</li> <li>Submit a pull request with a clear description</li> </ol>"},{"location":"internal-docs/#need-help","title":"\ud83d\udd0d Need Help?","text":"<p>If you can't find what you're looking for or need clarification: - Check the relevant team's documentation - Ask in the #engineering-help channel - Reach out to the documentation maintainers</p> <p>Last updated: June 2024</p>"},{"location":"internal-docs/leads/","title":"\ud83d\ude80 DexaMinds Lead Generation Process","text":""},{"location":"internal-docs/leads/#overview","title":"\ud83d\udccc Overview","text":"<p>This guide outlines DexaMinds' standardized lead generation process, ensuring consistency, efficiency, and high-quality pipeline development across all marketing and sales channels.</p>"},{"location":"internal-docs/leads/#lead-sources","title":"\ud83d\udd0d Lead Sources","text":""},{"location":"internal-docs/leads/#inbound-marketing","title":"\ud83d\udd38 Inbound Marketing","text":"<ul> <li>\ud83c\udf10 Website contact forms</li> <li>\ud83d\udcda Content marketing (blogs, whitepapers, ebooks)</li> <li>\ud83c\udfa5 Webinar registrations</li> <li>\ud83d\udcac Social media engagement</li> <li>\ud83d\udd0e SEO and organic search</li> </ul>"},{"location":"internal-docs/leads/#outbound-marketing","title":"\ud83d\udd38 Outbound Marketing","text":"<ul> <li>\u2709\ufe0f Email campaigns</li> <li>\ud83d\udcde Cold calling</li> <li>\ud83d\udcbc LinkedIn outreach</li> <li>\ud83c\udfe2 Industry events &amp; conferences</li> <li>\ud83e\udd1d Partnerships and referrals</li> </ul>"},{"location":"internal-docs/leads/#lead-qualification-process","title":"\u2705 Lead Qualification Process","text":""},{"location":"internal-docs/leads/#1-lead-capture","title":"1\ufe0f\u20e3 Lead Capture","text":"<ul> <li>All incoming leads are captured in the CRM system</li> <li>Mandatory fields: Name, Company, Email, Phone, Source</li> <li>Optional fields: Job Title, Company Size, Industry, Specific Needs</li> </ul>"},{"location":"internal-docs/leads/#2-initial-qualification-mql-marketing-qualified-lead","title":"2\ufe0f\u20e3 Initial Qualification \u2013 MQL (Marketing Qualified Lead)","text":"<ul> <li> <p>Lead scored based on:</p> </li> <li> <p>\ud83d\udcca Demographics</p> </li> <li>\ud83d\udcc8 Online behavior</li> <li>\ud83d\udcf0 Content engagement</li> <li>\ud83c\udf10 Website interactions</li> <li>\u2705 Threshold: Minimum score of 60/100 to qualify as MQL</li> </ul>"},{"location":"internal-docs/leads/#3-sales-qualification-sql-sales-qualified-lead","title":"3\ufe0f\u20e3 Sales Qualification \u2013 SQL (Sales Qualified Lead)","text":"<p>Handled by SDR (Sales Development Representative) using the BANT framework:</p> <ul> <li>\ud83d\udcb0 Budget: Does the lead have budget allocated?</li> <li>\ud83d\udc64 Authority: Is the lead a decision maker or influencer?</li> <li>\ud83d\udccc Need: What problem(s) are they solving?</li> <li>\u23f3 Timeline: When are they planning to implement?</li> </ul>"},{"location":"internal-docs/leads/#lead-handoff-process","title":"\ud83d\udd04 Lead Handoff Process","text":""},{"location":"internal-docs/leads/#mql-sql","title":"\ud83d\udce4 MQL \u27a1\ufe0f SQL","text":"<ul> <li>\ud83d\udd14 Auto-notification to assigned SDR</li> <li>\u23f1\ufe0f SLA: Respond within 24 hours</li> <li>\ud83d\udcde Schedule discovery call within 48 hours</li> </ul>"},{"location":"internal-docs/leads/#sql-opportunity","title":"\ud83d\udcc8 SQL \u27a1\ufe0f Opportunity","text":"<ul> <li>\ud83d\udda5\ufe0f Product demo scheduled</li> <li>\ud83d\udcd1 Customized solution presentation</li> <li>\ud83d\udcdd Proposal preparation &amp; submission</li> </ul>"},{"location":"internal-docs/leads/#lead-nurturing-strategy","title":"\ud83c\udf31 Lead Nurturing Strategy","text":"<ul> <li>\u2709\ufe0f Drip campaigns triggered by user behavior</li> <li>\ud83c\udfaf Personalized content recommendations</li> <li>\ud83c\udf9f\ufe0f Webinar &amp; event invitations</li> <li>\ud83d\uddc2\ufe0f Share case studies &amp; testimonials</li> <li>\ud83d\udcc6 Regular SDR follow-ups</li> </ul>"},{"location":"internal-docs/leads/#tools-platforms","title":"\ud83d\udee0\ufe0f Tools &amp; Platforms","text":"<p>(Tools to be finalized or replaced with actual systems)</p> Function Tool CRM [CRM Name] Marketing Automation [Marketing Tool] Email Campaigns [Email Tool] Analytics &amp; Reporting [Analytics Tool]"},{"location":"internal-docs/leads/#performance-metrics","title":"\ud83d\udcca Performance Metrics","text":"<ul> <li>\u23f1\ufe0f Lead Response Time</li> <li>\ud83d\udd04 MQL to SQL Conversion Rate</li> <li>\ud83d\udcc8 SQL to Opportunity Conversion Rate</li> <li>\ud83d\udd52 Sales Cycle Duration</li> <li>\ud83d\udcb8 Customer Acquisition Cost (CAC)</li> <li>\ud83d\udcb9 Return on Marketing Investment (ROMI)</li> </ul>"},{"location":"internal-docs/leads/#review-optimization","title":"\ud83d\udd01 Review &amp; Optimization","text":"<ul> <li>\ud83d\udcc5 Monthly lead gen performance reviews</li> <li>\ud83e\uddea A/B testing for campaign effectiveness</li> <li>\ud83d\udccb Quarterly strategy refinement</li> <li>\ud83d\udd01 Regular sales\u2013marketing feedback sync</li> </ul>"},{"location":"internal-docs/leads/#roles-responsibilities","title":"\ud83d\udc65 Roles &amp; Responsibilities","text":"Team Responsibilities \ud83c\udfaf Marketing Inbound lead gen, content creation, MQL scoring \ud83d\udcde SDR Initial outreach, BANT qualification, SQL handoff \ud83d\udcbc Sales Managing opportunities, conducting demos, closing deals \ud83e\udd1d Customer Success Client onboarding and post-sale handoff"},{"location":"internal-docs/leads/#compliance-data-protection","title":"\ud83d\udd10 Compliance &amp; Data Protection","text":"<ul> <li>\u2705 GDPR &amp; relevant data privacy compliance</li> <li>\ud83d\udd04 Clear opt-in/opt-out management</li> <li>\ud83d\udcc1 Data retention &amp; archival policies</li> <li>\ud83e\uddf9 Periodic data cleansing &amp; validation</li> </ul>"},{"location":"internal-docs/leads/#ready-to-get-started-with-linkedin","title":"\ud83d\ude80 Ready to Get Started with LinkedIn?","text":"<p>Looking to supercharge your lead generation efforts on the world's largest professional network? Check out our comprehensive LinkedIn Lead Generation Guide to learn proven strategies for finding and connecting with your ideal prospects on LinkedIn.</p> <p>\ud83d\udccc What you'll discover: - How to optimize your LinkedIn profile for lead generation - Effective outreach messaging techniques - Advanced search strategies to find your target audience - Best practices for engagement and relationship building</p> <p>Start growing your pipeline today with our expert LinkedIn strategies! \ud83d\ude80</p> <p>\ud83d\udcc5 Last Updated: July 10, 2025 \u00a9 DexaMinds Software Private Limited</p>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/","title":"\ud83d\ude80 LinkedIn Lead Generation Process","text":"<p>DexaMinds Standard Operating Guide</p>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#overview","title":"\ud83d\udccc Overview","text":"<p>This guide outlines DexaMinds\u2019 structured process for generating and managing B2B leads using LinkedIn and LinkedIn Sales Navigator.</p>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-1-define-your-target-audience","title":"\ud83c\udfaf Step 1: Define Your Target Audience","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#ideal-customer-profile-icp","title":"\ud83d\udc64 Ideal Customer Profile (ICP)","text":"<ul> <li>\ud83c\udfe2 Firmographics: Industry, company size, geography</li> <li>\ud83c\udf93 Job Titles: Decision-makers and key influencers</li> <li>\ud83d\udee0\ufe0f Tech Stack: Technologies currently in use</li> <li>\u26a0\ufe0f Pain Points: Problems we are uniquely positioned to solve</li> <li>\ud83e\udded Buying Process: Typical decision-making structure</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#create-buyer-personas","title":"\ud83e\uddec Create Buyer Personas","text":"<p>Each persona should include:</p> <ul> <li>Name &amp; role</li> <li>Key responsibilities</li> <li>Common business challenges</li> <li>Goals and KPIs</li> <li>Preferred communication channels</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-2-build-your-linkedin-foundation","title":"\ud83e\uddf1 Step 2: Build Your LinkedIn Foundation","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#profile-optimization-personal","title":"\ud83e\uddd1\u200d\ud83d\udcbc Profile Optimization (Personal)","text":"<ul> <li>\ud83d\udcf8 Professional photo &amp; branded banner</li> <li>\ud83c\udff7\ufe0f Headline with relevant keywords</li> <li>\ud83d\udcdd Clear, value-driven summary</li> <li>\ud83d\udee0\ufe0f Highlighted achievements &amp; endorsements</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#company-page-optimization","title":"\ud83c\udfe2 Company Page Optimization","text":"<ul> <li>\u2705 Complete company information</li> <li>\ud83d\udce2 Consistent content updates</li> <li>\ud83d\ude4c Encourage employee sharing &amp; engagement</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-3-advanced-search-lead-identification","title":"\ud83d\udd0d Step 3: Advanced Search &amp; Lead Identification","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#using-linkedin-sales-navigator","title":"\ud83e\udded Using LinkedIn Sales Navigator","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#saved-searches","title":"\ud83d\udd04 Saved Searches","text":"<ul> <li>Set up 3\u20135 targeted search filters</li> <li>Save searches for automatic lead updates</li> <li>Example Boolean string:</li> </ul> <p><code>(\"CTO\" OR \"VP Engineering\" OR \"Head of Technology\")    AND (\"B2B SaaS\" OR \"Enterprise Software\")    AND (\"Digital Transformation\" OR \"Cloud Migration\")</code></p>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#lead-lists","title":"\ud83d\uddc2\ufe0f Lead Lists","text":"<ul> <li>Segment by industry, geography, or company size</li> <li>Use tags for better classification</li> <li>Enable lead and account alerts</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-4-lead-qualification","title":"\u2705 Step 4: Lead Qualification","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#initial-assessment","title":"\ud83d\udd0e Initial Assessment","text":"<ul> <li>Profile completeness</li> <li>Mutual connections</li> <li>Recent activity &amp; engagement</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#bant-framework","title":"\ud83e\uddee BANT Framework","text":"<ul> <li>\ud83d\udcb0 Budget \u2013 Can they afford us?</li> <li>\ud83d\udc64 Authority \u2013 Are they decision-makers?</li> <li>\u2757 Need \u2013 Are they facing relevant challenges?</li> <li>\ud83d\udd52 Timeline \u2013 When are they looking to buy?</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-5-outreach-strategy","title":"\ud83d\udcac Step 5: Outreach Strategy","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#connection-request-template","title":"\ud83e\udd1d Connection Request Template","text":"<pre><code>Hi [First Name],\n\nI noticed [specific detail about their profile/company]. At DexaMinds, we help [solve a pain point] for teams like [their company].\n\nWould you be open to connecting?\n\nBest,  \n[Your Name]\n</code></pre>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#follow-up-sequence","title":"\ud83d\udce8 Follow-Up Sequence","text":"Day Action 1 Connection request 3 Thank-you + Value-driven content 7 Share an industry insight 14 Invite to a relevant event/webinar 21 Breakup message (if no response)"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-6-engagement-nurturing","title":"\ud83d\udd01 Step 6: Engagement &amp; Nurturing","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#content-strategy","title":"\ud83d\udce2 Content Strategy","text":"<ul> <li>Share thought leadership articles</li> <li>Post company updates and industry news</li> <li>Comment on posts from target accounts</li> <li>Engage with their comments and shares</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#personalization-techniques","title":"\ud83e\udde0 Personalization Techniques","text":"<ul> <li>Mention mutual connections</li> <li>Celebrate recent promotions or achievements</li> <li>Reference shared interests or groups</li> <li>Tie in recent company updates or milestones</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-7-conversion-handoff","title":"\ud83c\udfaf Step 7: Conversion &amp; Handoff","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#mql-criteria-marketing-qualified-lead","title":"\ud83e\uddea MQL Criteria (Marketing Qualified Lead)","text":"<ul> <li>Engaged with content or replied to outreach</li> <li>Visited our website or LinkedIn company page</li> <li>Matches ICP and BANT criteria</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#handoff-to-sales","title":"\ud83d\udd04 Handoff to Sales","text":"<ul> <li>Log all engagement data in CRM</li> <li>Include qualification notes and lead score</li> <li>Schedule a warm intro between SDR and AE</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#step-8-measurement-optimization","title":"\ud83d\udcc8 Step 8: Measurement &amp; Optimization","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#key-metrics","title":"\ud83d\udcca Key Metrics","text":"<ul> <li>Connection acceptance rate</li> <li>Response rate (DM or InMail)</li> <li>Meeting booking rate</li> <li>MQL \u27a1\ufe0f SQL conversion</li> <li>Pipeline generated via LinkedIn</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#continuous-improvement","title":"\ud83d\udd27 Continuous Improvement","text":"<ul> <li>A/B test messages regularly</li> <li>Refine ICP using conversion insights</li> <li>Adjust Sales Navigator filters monthly</li> <li>Refresh outreach content quarterly</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#tools-templates","title":"\ud83d\udee0\ufe0f Tools &amp; Templates","text":""},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#sales-navigator-search-templates","title":"\ud83d\udd0d Sales Navigator Search Templates","text":"<ul> <li>Search Template 1</li> <li>Search Template 2</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#messaging-templates","title":"\u2709\ufe0f Messaging Templates","text":"<ul> <li>Initial Outreach Template</li> <li>Follow-up Message</li> <li>Breakup Email</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/lead_generation/#compliance-best-practices","title":"\u2705 Compliance &amp; Best Practices","text":"<ul> <li>Adhere to LinkedIn\u2019s commercial use limits</li> <li>Personalize every message\u2014avoid automation spam</li> <li>Keep a professional and respectful tone</li> <li>Maintain logs of communication in CRM</li> <li>Follow up strategically\u2014don\u2019t over-message</li> </ul> <p>\ud83d\udd19 Previous: Sales Navigator Guide</p> <p>\ud83d\udcc5 Last Updated: July 10, 2025 \ud83d\udc65 Maintainer: Sales Enablement Team @ DexaMinds</p>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/","title":"\ud83d\udcbc LinkedIn Platform Overview","text":""},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#internal-guide-for-dexaminds-sales-lead-generation-team","title":"Internal Guide for DexaMinds Sales &amp; Lead Generation Team","text":"<p>This document provides an operational overview of LinkedIn\u2019s features, limits, and best practices relevant to DexaMinds\u2019 ongoing lead generation and outreach efforts. It is intended as an internal resource for onboarding new team members and standardizing usage across Sales and Marketing roles.</p>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#platform-summary","title":"\ud83c\udf10 Platform Summary","text":"<p>LinkedIn is the world\u2019s largest professional networking platform with:</p> <ul> <li>900M+ members across 200+ countries</li> <li>65M+ decision-makers</li> <li>High engagement from startup founders, executives, and technology leads</li> </ul> <p>DexaMinds uses LinkedIn for:</p> <ul> <li>\u270d\ufe0f Lead qualification and outreach</li> <li>\ud83d\udcc8 Sales pipeline building</li> <li>\ud83d\udd0d Engagement with target audiences</li> <li>\ud83d\udcc4 Content-driven brand visibility</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#core-capabilities-at-a-glance","title":"\ud83e\uddf0 Core Capabilities at a Glance","text":""},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#profile-management","title":"\ud83d\udd39 Profile Management","text":"<p>Used by all client-facing DexaMinds personnel.</p> <ul> <li>\ud83d\udcf8 Professional photo, branded banner</li> <li>\ud83e\udde0 Headline reflecting current role and offering (e.g., Software Consulting @ DexaMinds)</li> <li>\u270d\ufe0f Summary with value proposition</li> <li>\ud83c\udfdb\ufe0f Experience, skills, endorsements, and recommendations</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#company-page","title":"\ud83d\udccd Company Page","text":"<p>Maintained by the marketing team.</p> <ul> <li>\ud83d\udcdd Branded description of DexaMinds services</li> <li>\ud83d\udcc2 Showcase pages (if needed for verticals like AI, MVPs, Cloud)</li> <li>\ud83d\udcf0 Posts and thought leadership pieces</li> <li>\ud83d\udcca Follower analytics</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#content-formats","title":"\u270d\ufe0f Content Formats","text":"<p>Actively used for lead warming and network engagement.</p> <ul> <li>\ud83d\udcc4 Text posts (up to 3,000 characters)</li> <li>\ud83d\uddc3\ufe0f Carousels/documents (PDF uploads)</li> <li>\ud83c\udfa5 Video uploads (up to 10 minutes / 5GB)</li> <li>\ud83d\udcc3 Articles (up to 125,000 characters)</li> <li>\ud83d\udcf0 Newsletters (for long-form episodic content)</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#engagement-mechanisms","title":"\ud83e\udd1d Engagement Mechanisms","text":"<p>Day-to-day usage by SDRs, founders, and marketing team.</p> <ul> <li>\ud83d\udcac Comments, likes, and shares</li> <li>\ud83d\udce9 Personalized connect messages</li> <li>\ud83d\udecb\ufe0f Group participation (relevant to AI, SaaS, startups)</li> <li>\ud83e\uddf3 Follower growth and DM outreach</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#platform-limits-as-of-2025","title":"\ud83d\udd39 Platform Limits (As of 2025)","text":""},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#connection-limits","title":"\ud83d\udd17 Connection Limits","text":"Limit Type Value Total Connections 30,000 Weekly Requests \\~100 (varies) Withdrawn Requests 100 per week Pending Invitations 500 max"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#messaging-limits","title":"\ud83d\udce2 Messaging Limits","text":"Type Limit InMail (Premium Plans) 15/month 1st-degree Messaging Unlimited Group Messages (non-1st) 15/month Max Message Length 20,000 characters"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#content-sharing","title":"\ud83d\udce3 Content Sharing","text":"Type Limit Daily Posts 25 max Post Characters 3,000 Article Characters 125,000 Images per Post 9 Video Duration 10 mins / 5GB"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#search-view-limits","title":"\ud83d\udd0d Search &amp; View Limits","text":"Activity Estimated Limit Profile Views \\~200\u2013300/day People You May Know \\~500/day Monthly Search Limit \\~1,000 (varies by plan)"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#operational-best-practices-for-dexaminds-team","title":"\u2699\ufe0f Operational Best Practices for DexaMinds Team","text":"<ul> <li>\u2705 Send 20\u201330 connection requests per day to stay under LinkedIn\u2019s radar.</li> <li>\ud83d\udc8c Personalize messages to improve connection acceptance.</li> <li>\u274c Limit bulk actions (e.g., viewing too many profiles quickly).</li> <li>\ud83d\udcca Monitor connection acceptance &amp; message reply rates regularly.</li> <li>\u274e Remove pending invites periodically to stay below the 500 limit.</li> <li>\ud83d\udcca Use LinkedIn Analytics for post performance and engagement patterns.</li> <li>\ud83d\udcdd Coordinate with the Marketing team before posting overlapping/similar content.</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#key-platform-stats","title":"\ud83d\udcca Key Platform Stats","text":"<p>These are useful for internal strategy, reporting, and understanding platform performance expectations:</p> <ul> <li>\u2714\ufe0f 4 out of 5 users influence buying decisions</li> <li>\u2714\ufe0f 80% of B2B leads sourced via LinkedIn</li> <li>\u2714\ufe0f 3x conversion rates vs. other platforms</li> <li>\u2714\ufe0f 15x content impressions compared to job posts</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/linkedIn/#next-section","title":"\ud83d\udcd3 Next Section","text":"<p>\ud83d\udc49 Sales Navigator: Feature Guide &amp; Workflow</p> <p>This next guide covers DexaMinds\u2019 usage of Sales Navigator\u2014how to search leads, save accounts, organize outreach, and manage relationship tracking.</p> <p>\ud83d\udcc5 Last Updated: July 10, 2025 \ud83d\udc65 Maintainer: Sales Enablement Team @ DexaMinds</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/","title":"\ud83d\ude80 Introduction to LinkedIn Sales Navigator","text":"<p>A Guide for DexaMinds Sales &amp; Outreach Teams</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#what-is-linkedin-sales-navigator","title":"\ud83d\udd0e What is LinkedIn Sales Navigator?","text":"<p>LinkedIn Sales Navigator is a premium sales intelligence and prospecting tool built on top of LinkedIn. It helps sales teams identify, track, and engage with the right decision-makers using advanced search filters, lead tracking, real-time insights, and personalized outreach tools.</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#key-features","title":"\ud83c\udf1f Key Features","text":""},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#1-advanced-search-lead-recommendations","title":"\ud83c\udfaf 1. Advanced Search &amp; Lead Recommendations","text":"<ul> <li>\ud83d\udd0d Advanced Filters \u2013 Narrow searches by industry, geography, company size, job title, seniority, etc.</li> <li>\ud83e\udde0 AI-Powered Lead Recommendations \u2013 Auto-suggested leads based on your activity and saved preferences</li> <li>\ud83e\udde9 Boolean Search \u2013 Use logical operators (<code>AND</code>, <code>OR</code>, <code>NOT</code>) for precise targeting</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#2-lead-account-management","title":"\ud83d\udccb 2. Lead &amp; Account Management","text":"<ul> <li>\ud83d\udcc2 Lead Lists \u2013 Organize prospects into lists for campaigns or outreach cycles</li> <li>\ud83c\udfe2 Account Lists \u2013 Track companies of interest and monitor key developments</li> <li>\ud83e\udd1d TeamLink \u2013 Identify mutual connections across the team network for warm intros</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#3-real-time-sales-intelligence","title":"\ud83d\udd14 3. Real-Time Sales Intelligence","text":"<ul> <li>\ud83d\uddde\ufe0f Alerts \u2013 Get notified when leads change jobs, post updates, or when accounts make news</li> <li>\u2709\ufe0f InMail Messaging \u2013 Send messages directly to prospects outside your LinkedIn network</li> <li>\ud83d\udcce PointDrive \u2013 Share documents and presentations with tracking capabilities</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#4-integration-workflow","title":"\ud83d\udd27 4. Integration &amp; Workflow","text":"<ul> <li>\ud83d\udd17 CRM Integrations \u2013 Connect with Salesforce, Microsoft Dynamics, HubSpot, and others</li> <li>\ud83e\udde9 Workflow Tools \u2013 Sync with outreach tools and third-party enrichment platforms</li> <li>\ud83d\udcca Engagement Metrics \u2013 Track profile views, InMail response rates, and content engagement</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#sales-navigator-at-dexaminds-how-we-use-it","title":"\ud83e\uddf0 Sales Navigator at DexaMinds: How We Use It","text":"<p>Sales Navigator is actively used across our lead generation, prospecting, and B2B outreach efforts.</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#key-activities-at-dexaminds","title":"Key Activities at DexaMinds:","text":"<ul> <li>Identifying and saving high-quality leads based on our Ideal Customer Profile (ICP)</li> <li>Creating targeted lead/account lists for different campaigns</li> <li>Sending personalized InMail messages to first-time contacts</li> <li>Using TeamLink to find warm intros through our company network</li> <li>Monitoring trigger events (job changes, company news) to reach out at the right time</li> </ul>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#limitations","title":"\u26a0\ufe0f Limitations","text":"<p>While Sales Navigator is a powerful tool, it's important to be aware of its limitations:</p> <ul> <li>Search Results - Limited to 1,000 results per search</li> <li>Saved Leads - Maximum of 10,000 leads can be saved per account</li> <li>InMail Messages - Limited to 50 per month (varies by subscription)</li> <li>Profile Views - Limited to 2,500 profile views per month</li> <li>Search Alerts - Maximum of 100 saved searches with alerts</li> <li>TeamLink Messages - Limited to 30 per month</li> <li>Export Limits - 1,000 leads per export (CSV/Excel)</li> <li>CRM Sync - Some CRM integrations have daily sync limits</li> </ul> <p>\ud83d\udca1 Pro Tip: Plan your outreach strategically to stay within these limits and maintain account health.</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#getting-started","title":"\ud83d\udea6 Getting Started","text":"<ol> <li>Log in to Sales Navigator via your DexaMinds LinkedIn account</li> <li>Define your ICP \u2013 Refer to \ud83d\udc49 DexaMinds ICP Guidelines</li> <li>Create Saved Searches using relevant filters</li> <li>Build Lead &amp; Account Lists based on campaigns or regions</li> <li>Start Engaging with prospects using InMail, profile views, and content shares</li> </ol>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<p>\u2705 Use Saved Searches to discover new leads automatically \u2705 Regularly review alerts for job changes, company signals, and updates \u2705 Warm up leads by viewing profiles or engaging with their content \u2705 Customize every InMail \u2013 mention a post, role, or shared interest \u2705 Refresh lead/account lists regularly to maintain relevance</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#metrics-to-track","title":"\ud83d\udcca Metrics to Track","text":"Metric Location InMail Response Rate Sales Navigator Inbox Saved Lead Updates Alerts Panel Account Activity Account List Dashboard PointDrive Engagement Share History CRM Sync Status CRM Integration Panel"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#quick-tips","title":"\ud83e\udde0 Quick Tips","text":"<p>\ud83d\udca1 Use Boolean Logic: <code>(\"CTO\" OR \"Chief Technology Officer\") AND \"FinTech\"</code> \u2013 will find broader, yet relevant matches.</p> <p>\ud83d\udca1 Don\u2019t jump straight to InMail: View their profile, react to a post, or find a mutual connection for TeamLink-based intro first.</p> <p>\ud83d\udca1 Use Tags: Label leads by region, tech stack, or deal stage for better organization.</p>"},{"location":"internal-docs/leads/channels/linkedin/sales_navigator/#summary","title":"\ud83d\udccc Summary","text":"<p>Sales Navigator is a core tool in DexaMinds' sales workflow\u2014supporting targeted lead discovery, relationship-building, and real-time engagement tracking. Mastering its features is key to running effective, personalized outreach at scale.</p> <p>Previous: Introduction to LinkedIn Next: Lead Generation Process</p> <p>\ud83d\udcc5 Last Updated: July 10, 2025 \ud83d\udc65 Maintainer: Sales Enablement Team @ DexaMinds</p>"},{"location":"internal-docs/processes/","title":"\ud83d\udd04 Development Processes","text":"<p>Welcome to the Development Processes documentation. This directory contains guidelines, workflows, and best practices that govern how we develop, review, and deploy software at DexaMinds.</p>"},{"location":"internal-docs/processes/#documentation-index","title":"\ud83d\udcda Documentation Index","text":"<ol> <li> <p>Code Review Guidelines    Standards and best practices for conducting effective code reviews.</p> </li> <li> <p>Deployment Process    Step-by-step guide to our deployment pipeline and release procedures.</p> </li> </ol>"},{"location":"internal-docs/processes/#development-workflow","title":"\ud83c\udfd7 Development Workflow","text":""},{"location":"internal-docs/processes/#1-branching-strategy","title":"1. Branching Strategy","text":"<ul> <li><code>main</code> - Production-ready code</li> <li><code>staging</code> - Pre-production environment</li> <li><code>feature/*</code> - New features and improvements</li> <li><code>bugfix/*</code> - Bug fixes</li> <li><code>hotfix/*</code> - Critical production fixes</li> </ul>"},{"location":"internal-docs/processes/#2-pull-request-process","title":"2. Pull Request Process","text":"<ol> <li>Create a feature/bugfix branch from <code>main</code></li> <li>Make your changes with clear, atomic commits</li> <li>Open a PR with a descriptive title and description</li> <li>Request reviews from relevant team members</li> <li>Address all review comments</li> <li>Get required approvals</li> <li>Squash and merge</li> </ol>"},{"location":"internal-docs/processes/#3-versioning","title":"3. Versioning","text":"<p>We follow Semantic Versioning: - MAJOR: Breaking changes - MINOR: Backwards-compatible features - PATCH: Backwards-compatible bug fixes</p>"},{"location":"internal-docs/processes/#tools-we-use","title":"\ud83d\udee0 Tools We Use","text":"<ul> <li>Version Control: GitHub</li> <li>CI/CD: GitHub Actions</li> <li>Code Review: GitHub Pull Requests</li> <li>Documentation: Markdown, MkDocs</li> <li>Project Management: Jira, Linear</li> </ul>"},{"location":"internal-docs/processes/#quality-assurance","title":"\u2705 Quality Assurance","text":"<ul> <li>Unit tests for all new features</li> <li>Integration tests for critical paths</li> <li>End-to-end tests for core user journeys</li> <li>Performance testing for high-traffic endpoints</li> <li>Security scanning in CI/CD pipeline</li> </ul>"},{"location":"internal-docs/processes/#contributing","title":"\ud83d\udcdd Contributing","text":"<ol> <li>Check existing issues before creating new ones</li> <li>Follow the PR template</li> <li>Keep PRs small and focused</li> <li>Update documentation when making changes</li> <li>Add tests for new features</li> </ol>"},{"location":"internal-docs/processes/#need-help","title":"\u2753 Need Help?","text":"<ul> <li>For process questions: #engineering-processes</li> <li>For urgent issues: @engineering-managers</li> <li>For tooling help: #dev-tools-support</li> </ul> <p>Last Updated: June 2025</p>"},{"location":"internal-docs/processes/code-review-guidelines/","title":"\ud83d\udc68\u200d\ud83d\udcbb Code Review Guidelines","text":"<p>This document outlines the code review process and guidelines at DexaMinds to ensure high-quality, maintainable, and secure code.</p>"},{"location":"internal-docs/processes/code-review-guidelines/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Purpose</li> <li>Review Process</li> <li>Review Checklist</li> <li>Best Practices</li> <li>Common Issues</li> <li>Review Etiquette</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#purpose","title":"\ud83c\udfaf Purpose","text":"<ul> <li>Maintain code quality and consistency</li> <li>Share knowledge across the team</li> <li>Catch bugs and security issues early</li> <li>Ensure adherence to coding standards</li> <li>Foster collaborative improvement</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#review-process","title":"\ud83d\udd04 Review Process","text":"<ol> <li>Author</li> <li>Create a feature branch</li> <li>Make focused, atomic commits</li> <li>Write clear PR descriptions</li> <li> <p>Tag appropriate reviewers</p> </li> <li> <p>Reviewer</p> </li> <li>Review within 24 hours</li> <li>Provide constructive feedback</li> <li>Check for security concerns</li> <li> <p>Verify tests and documentation</p> </li> <li> <p>After Approval</p> </li> <li>Squash and merge</li> <li>Delete feature branch</li> <li>Update related documentation</li> </ol>"},{"location":"internal-docs/processes/code-review-guidelines/#review-checklist","title":"\u2705 Review Checklist","text":""},{"location":"internal-docs/processes/code-review-guidelines/#code-quality","title":"Code Quality","text":"<ul> <li>Follows style guide</li> <li>No commented-out code</li> <li>No debugging statements</li> <li>Proper error handling</li> <li>Code is testable</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#functionality","title":"Functionality","text":"<ul> <li>Meets requirements</li> <li>Handles edge cases</li> <li>No performance issues</li> <li>Works as expected</li> <li>No regression</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#security","title":"Security","text":"<ul> <li>Input validation</li> <li>No hardcoded secrets</li> <li>Proper authentication</li> <li>Data protection</li> <li>Dependency updates</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#testing","title":"Testing","text":"<ul> <li>Unit tests added</li> <li>Integration tests</li> <li>Test coverage \u226580%</li> <li>Edge cases tested</li> <li>Mock external services</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#documentation","title":"Documentation","text":"<ul> <li>Code comments</li> <li>API documentation</li> <li>README updates</li> <li>Changelog entry</li> <li>Breaking changes</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#best-practices","title":"\ud83c\udfc6 Best Practices","text":""},{"location":"internal-docs/processes/code-review-guidelines/#do","title":"Do","text":"<ul> <li>Keep PRs small and focused</li> <li>Write clear commit messages</li> <li>Explain \"why\" in comments</li> <li>Use meaningful names</li> <li>Follow existing patterns</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#dont","title":"Don't","text":"<ul> <li>Mix refactoring with features</li> <li>Commit commented code</li> <li>Ignore linter warnings</li> <li>Bypass security controls</li> <li>Skip documentation</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#common-issues","title":"\ud83d\udd0d Common Issues","text":"<pre><code>// Bad\nconst x = 1;\n\n// Good\nconst maxRetryAttempts = 1;\n</code></pre>"},{"location":"internal-docs/processes/code-review-guidelines/#review-etiquette","title":"\ud83e\udd1d Review Etiquette","text":""},{"location":"internal-docs/processes/code-review-guidelines/#as-an-author","title":"As an Author","text":"<ul> <li>Be open to feedback</li> <li>Explain your reasoning</li> <li>Keep emotions in check</li> <li>Thank reviewers</li> <li>Learn and improve</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#as-a-reviewer","title":"As a Reviewer","text":"<ul> <li>Be respectful</li> <li>Explain suggestions</li> <li>Focus on code, not people</li> <li>Acknowledge good work</li> <li>Be timely in responses</li> </ul>"},{"location":"internal-docs/processes/code-review-guidelines/#resources","title":"\ud83d\udcda Resources","text":"<ul> <li>Coding Standards</li> <li>Security Guidelines</li> <li>Testing Strategy</li> <li>Documentation Guide</li> </ul> <p>Last Updated: June 2025</p>"},{"location":"internal-docs/processes/deployment-process/","title":"\ud83d\ude80 Deployment Process","text":"<p>This document outlines the standard deployment process for all services and applications at DexaMinds. Following these guidelines ensures consistent, reliable, and traceable deployments across all environments.</p>"},{"location":"internal-docs/processes/deployment-process/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Environments</li> <li>Deployment Workflow</li> <li>Pre-Deployment Checklist</li> <li>Deployment Steps</li> <li>Rollback Procedure</li> <li>Post-Deployment Verification</li> <li>Emergency Procedures</li> </ul>"},{"location":"internal-docs/processes/deployment-process/#environments","title":"\ud83c\udf0d Environments","text":"Environment Purpose Access Branch Development Local development Developers <code>feature/*</code> Staging Pre-production testing QA Team <code>staging</code> Production Live environment Ops Team <code>main</code>"},{"location":"internal-docs/processes/deployment-process/#deployment-workflow","title":"\ud83d\udd04 Deployment Workflow","text":"<ol> <li>Development</li> <li>Code changes are committed to feature branches</li> <li>Automated tests run on each push</li> <li> <p>Peer review required before merging to staging</p> </li> <li> <p>Staging</p> </li> <li>Merge approved features to <code>staging</code> branch</li> <li>Automated deployment to staging environment</li> <li>QA and integration testing</li> <li> <p>Performance and security validation</p> </li> <li> <p>Production</p> </li> <li>Create release branch from <code>staging</code></li> <li>Deploy to production during maintenance window</li> <li>Monitor and verify deployment</li> </ol>"},{"location":"internal-docs/processes/deployment-process/#pre-deployment-checklist","title":"\u2705 Pre-Deployment Checklist","text":"<ul> <li>All tests are passing</li> <li>Code review completed and approved</li> <li>Documentation is updated</li> <li>Dependencies are up-to-date</li> <li>Database migrations are ready (if applicable)</li> <li>Rollback plan is prepared</li> </ul>"},{"location":"internal-docs/processes/deployment-process/#deployment-steps","title":"\ud83d\udee0 Deployment Steps","text":""},{"location":"internal-docs/processes/deployment-process/#automated-deployment-recommended","title":"Automated Deployment (Recommended)","text":"<pre><code># Deploy to staging\n$ ./deploy.sh --env=staging --version=x.y.z\n\n# Deploy to production\n$ ./deploy.sh --env=production --version=x.y.z\n</code></pre>"},{"location":"internal-docs/processes/deployment-process/#manual-deployment","title":"Manual Deployment","text":"<ol> <li> <p>Build the application <code>bash    npm run build</code></p> </li> <li> <p>Deploy to target environment    ```bash    # Staging    npm run deploy:staging</p> </li> </ol> <p># Production    npm run deploy:production    ```</p> <ol> <li>Verify deployment <code>bash    curl -I https://api.staging.dexaminds.com/health</code></li> </ol>"},{"location":"internal-docs/processes/deployment-process/#rollback-procedure","title":"\ud83d\udd19 Rollback Procedure","text":"<ol> <li> <p>Identify the previous stable version <code>bash    git log --oneline -n 5</code></p> </li> <li> <p>Rollback to previous version <code>bash    git checkout &lt;commit-hash&gt;    ./deploy.sh --rollback --env=production</code></p> </li> </ol>"},{"location":"internal-docs/processes/deployment-process/#post-deployment-verification","title":"\ud83d\udd0d Post-Deployment Verification","text":"<ul> <li>Verify application health</li> <li>Check error logs</li> <li>Monitor metrics and dashboards</li> <li>Confirm critical user journeys</li> <li>Notify stakeholders</li> </ul>"},{"location":"internal-docs/processes/deployment-process/#emergency-procedures","title":"\ud83d\udea8 Emergency Procedures","text":""},{"location":"internal-docs/processes/deployment-process/#for-critical-issues","title":"For Critical Issues","text":"<ol> <li> <p>Immediate Rollback <code>bash    ./deploy.sh --rollback --env=production --emergency</code></p> </li> <li> <p>Contact</p> </li> <li>Primary On-call: @ops-team</li> <li>Secondary: @engineering-managers</li> </ol>"},{"location":"internal-docs/processes/deployment-process/#monitoring-and-alerts","title":"Monitoring and Alerts","text":"<ul> <li>PagerDuty: DexaMinds Alerts</li> <li>Grafana: Production Dashboard</li> </ul>"},{"location":"internal-docs/processes/deployment-process/#related-documents","title":"\ud83d\udcda Related Documents","text":"<ul> <li>Incident Response Guide</li> <li>Release Management Policy</li> <li>Environment Configuration</li> </ul> <p>Last Updated: June 2025</p>"},{"location":"internal-docs/tutorials/","title":"\ud83d\udcda Tutorials &amp; How-To Guides","text":"<p>Welcome to the Tutorials hub! This directory contains step-by-step guides to help you with various development tasks, from setting up your environment to troubleshooting common issues.</p>"},{"location":"internal-docs/tutorials/#getting-started","title":"\ud83c\udf93 Getting Started","text":"<ol> <li> <p>Local Environment Setup    Comprehensive guide to setting up your development environment from scratch.</p> </li> <li> <p>Debugging Common Issues    Solutions to frequent problems you might encounter during development.</p> </li> </ol>"},{"location":"internal-docs/tutorials/#available-tutorials","title":"\ud83d\udee0 Available Tutorials","text":""},{"location":"internal-docs/tutorials/#development-environment","title":"Development Environment","text":"<ul> <li>Prerequisites &amp; Setup - System requirements and installation</li> <li>Running the Application - Start and verify your environment</li> <li>Troubleshooting Guide - Fix common setup problems</li> </ul>"},{"location":"internal-docs/tutorials/#common-tasks","title":"Common Tasks","text":"<ul> <li>Database Connection Issues</li> <li>Frontend Not Connecting to Backend</li> <li>Dependency Management</li> </ul>"},{"location":"internal-docs/tutorials/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Common Issues &amp; Solutions</li> <li>Docker Container Issues</li> <li>Database Migration Problems</li> </ul>"},{"location":"internal-docs/tutorials/#quick-start","title":"\ud83d\ude80 Quick Start","text":""},{"location":"internal-docs/tutorials/#run-the-application","title":"Run the Application","text":"<pre><code># Start all services\ndocker-compose up -d\n\n# Run backend server\ncd backend\npython manage.py runserver\n\n# Run frontend development server\ncd frontend\nnpm run dev\n</code></pre>"},{"location":"internal-docs/tutorials/#common-commands","title":"Common Commands","text":"<pre><code># Run tests\npytest  # Backend\nnpm test  # Frontend\n\n# Database migrations\npython manage.py makemigrations\npython manage.py migrate\n\n# Lint code\nflake8 .  # Python\nnpx eslint .  # JavaScript\n</code></pre>"},{"location":"internal-docs/tutorials/#contributing-new-tutorials","title":"\ud83d\udcdd Contributing New Tutorials","text":"<p>We welcome contributions to our tutorials! To add a new tutorial:</p> <ol> <li>Create a new Markdown file in this directory</li> <li>Follow the existing format and structure</li> <li>Include clear, step-by-step instructions</li> <li>Add relevant code examples and screenshots</li> <li>Submit a pull request for review</li> </ol> <p>Last Updated: June 2025</p>"},{"location":"internal-docs/tutorials/debugging-common-issues/","title":"\ud83d\udc1b Debugging Common Issues","text":"<p>This guide covers common issues you might encounter while working with the DexaMinds platform and how to resolve them.</p>"},{"location":"internal-docs/tutorials/debugging-common-issues/#general-debugging-approach","title":"\ud83d\udd0d General Debugging Approach","text":"<ol> <li>Check the logs    ```bash    # View application logs    docker-compose logs -f</li> </ol> <p># View backend logs    tail -f backend/logs/debug.log    ```</p> <ol> <li> <p>Verify services are running <code>bash    docker ps</code></p> </li> <li> <p>Check service status    ```bash    # Backend    curl http://localhost:8000/health</p> </li> </ol> <p># Frontend    curl -I http://localhost:3000    ```</p>"},{"location":"internal-docs/tutorials/debugging-common-issues/#common-issues-solutions","title":"\ud83d\udea8 Common Issues &amp; Solutions","text":""},{"location":"internal-docs/tutorials/debugging-common-issues/#1-database-connection-issues","title":"1. Database Connection Issues","text":"<p>Symptoms: - \"Could not connect to database\" errors - Timeout when accessing database</p> <p>Solutions:</p> <pre><code># Check if PostgreSQL is running\ndocker ps | grep postgres\n\n# Check PostgreSQL logs\ndocker-compose logs postgres\n\n# Try connecting manually\nPGPASSWORD=postgres psql -h localhost -U postgres -d dexaminds\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#2-frontend-not-connecting-to-backend","title":"2. Frontend Not Connecting to Backend","text":"<p>Symptoms: - API requests failing with CORS errors - \"Connection refused\" errors</p> <p>Solutions: 1. Verify backend is running 2. Check <code>NEXT_PUBLIC_API_URL</code> in frontend <code>.env</code> 3. Ensure CORS is properly configured in backend</p>"},{"location":"internal-docs/tutorials/debugging-common-issues/#3-dependency-issues","title":"3. Dependency Issues","text":"<p>Symptoms: - Module not found errors - Version conflicts</p> <p>Solutions:</p> <pre><code># Frontend\nrm -rf node_modules package-lock.json\nnpm install\n\n# Backend\nrm -rf venv\npython -m venv venv\nsource venv/bin/activate  # Windows: .\\venv\\Scripts\\activate\npip install -r requirements.txt\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#4-docker-container-issues","title":"4. Docker Container Issues","text":"<p>Symptoms: - Containers won't start - Port conflicts</p> <p>Solutions:</p> <pre><code># Stop and remove all containers\ndocker-compose down\n\n# Rebuild containers\ndocker-compose build --no-cache\n\n# Check for port conflicts\nlsof -i :&lt;port&gt;  # Mac/Linux\nnetstat -ano | findstr :&lt;port&gt;  # Windows\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#5-database-migration-problems","title":"5. Database Migration Problems","text":"<p>Symptoms: - Migration conflicts - Database schema out of sync</p> <p>Solutions:</p> <pre><code># Show migrations\npython manage.py showmigrations\n\n# Reset migrations (DEV ONLY)\nfind . -path \"*/migrations/*.py\" -not -name \"__init__.py\" -delete\nfind . -path \"*/migrations/*.pyc\" -delete\npython manage.py makemigrations\npython manage.py migrate --fake-initial\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#debugging-tools","title":"\ud83d\udee0 Debugging Tools","text":""},{"location":"internal-docs/tutorials/debugging-common-issues/#backend-pythondjango","title":"Backend (Python/Django)","text":"<ol> <li> <p>pdb Debugger <code>python    import pdb; pdb.set_trace()  # Add to your code</code></p> </li> <li> <p>Django Debug Toolbar <code>python    # settings.py    INSTALLED_APPS += ['debug_toolbar']    MIDDLEWARE += ['debug_toolbar.middleware.DebugToolbarMiddleware']    INTERNAL_IPS = ['127.0.0.1']</code></p> </li> </ol>"},{"location":"internal-docs/tutorials/debugging-common-issues/#frontend-reactnextjs","title":"Frontend (React/Next.js)","text":"<ol> <li>React Developer Tools</li> <li>Install Chrome/Firefox extension</li> <li> <p>Inspect component hierarchy and props</p> </li> <li> <p>Browser DevTools</p> </li> <li>Console for errors</li> <li>Network tab for API calls</li> <li>Application tab for storage</li> </ol>"},{"location":"internal-docs/tutorials/debugging-common-issues/#common-error-messages","title":"\ud83d\udcdd Common Error Messages","text":""},{"location":"internal-docs/tutorials/debugging-common-issues/#module-not-found-cant-resolve-module","title":"\"Module not found: Can't resolve 'module'\"","text":"<pre><code># Delete node_modules and reinstall\nrm -rf node_modules\nnpm install\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#port-already-in-use","title":"\"Port already in use\"","text":"<pre><code># Find and kill the process\nlsof -i :3000  # Replace with your port\nkill -9 &lt;PID&gt;\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#database-is-locked","title":"\"Database is locked\"","text":"<pre><code># For SQLite\nrm db.sqlite3\npython manage.py migrate\npython manage.py createsuperuser\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#performance-issues","title":"\ud83d\udd0d Performance Issues","text":""},{"location":"internal-docs/tutorials/debugging-common-issues/#slow-database-queries","title":"Slow Database Queries","text":"<pre><code># Add to settings.py to log slow queries\nLOGGING = {\n    'version': 1,\n    'handlers': {\n        'console': {\n            'level': 'DEBUG',\n            'class': 'logging.StreamHandler',\n        },\n    },\n    'loggers': {\n        'django.db.backends': {\n            'level': 'DEBUG',\n            'handlers': ['console'],\n        }\n    },\n}\n</code></pre>"},{"location":"internal-docs/tutorials/debugging-common-issues/#frontend-performance","title":"Frontend Performance","text":"<ol> <li>Use React DevTools Profiler</li> <li>Check bundle size with <code>source-map-explorer</code></li> <li>Lazy load components</li> </ol>"},{"location":"internal-docs/tutorials/debugging-common-issues/#getting-help","title":"\ud83c\udd98 Getting Help","text":"<p>When asking for help, please provide: 1. Error message 2. Steps to reproduce 3. Environment details 4. What you've tried</p>"},{"location":"internal-docs/tutorials/debugging-common-issues/#additional-resources","title":"\ud83d\udcda Additional Resources","text":"<ul> <li>React Debugging</li> <li>Docker Troubleshooting</li> </ul> <p>Last Updated: June 2025</p>"},{"location":"internal-docs/tutorials/setup-local-env/","title":"\ud83d\udda5 Local Development Environment Setup","text":"<p>This guide provides comprehensive instructions for setting up your local development environment for the DexaMinds platform.</p>"},{"location":"internal-docs/tutorials/setup-local-env/#prerequisites","title":"\ud83d\ude80 Prerequisites","text":""},{"location":"internal-docs/tutorials/setup-local-env/#hardware-requirements","title":"Hardware Requirements","text":"<ul> <li>CPU: Quad-core 2.5 GHz or better</li> <li>RAM: 16GB minimum (32GB recommended)</li> <li>Storage: 50GB free space</li> <li>OS: macOS 12+, Windows 10/11, or Linux</li> </ul>"},{"location":"internal-docs/tutorials/setup-local-env/#required-software","title":"Required Software","text":"<ol> <li>Git - Download</li> <li>Docker Desktop - Download</li> <li>Node.js (v18 LTS) - Download</li> <li>Python (3.9+) - Download</li> <li>Windsurf IDE - Download</li> </ol>"},{"location":"internal-docs/tutorials/setup-local-env/#installation-steps","title":"\ud83d\udee0 Installation Steps","text":""},{"location":"internal-docs/tutorials/setup-local-env/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone git@github.com:dexaminds/dexaminds.git\ncd dexaminds\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#2-configure-environment","title":"2. Configure Environment","text":"<p>Create a <code>.env</code> file in the project root with the following content:</p> <pre><code># Backend Configuration\nDEBUG=True\nSECRET_KEY=your-secret-key-here\nALLOWED_HOSTS=localhost,127.0.0.1\n\n# Database Configuration\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=postgres\nPOSTGRES_DB=dexaminds\n\n# Frontend Configuration\nNEXT_PUBLIC_API_URL=http://localhost:8000\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#3-start-services","title":"3. Start Services","text":""},{"location":"internal-docs/tutorials/setup-local-env/#database-services","title":"Database Services","text":"<pre><code># Start PostgreSQL and Redis\ndocker-compose up -d postgres redis\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#4-backend-setup","title":"4. Backend Setup","text":"<pre><code># Navigate to backend directory\ncd backend\n\n# Create and activate virtual environment\npython -m venv venv\n# Windows: .\\venv\\Scripts\\activate\nsource venv/bin/activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Run migrations\npython manage.py migrate\n\n# Create admin user (follow prompts)\npython manage.py createsuperuser\n\n# Start development server\npython manage.py runserver\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#5-frontend-setup","title":"5. Frontend Setup","text":"<pre><code># In a new terminal, navigate to frontend directory\ncd frontend\n\n# Install dependencies\nnpm install\n\n# Start development server\nnpm run dev\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#verify-your-setup","title":"\ud83d\udd0d Verify Your Setup","text":"<ol> <li>Frontend: Open http://localhost:3000</li> <li>Backend API: Open http://localhost:8000/api/</li> <li>Admin Panel: http://localhost:8000/admin/</li> </ol>"},{"location":"internal-docs/tutorials/setup-local-env/#running-tests","title":"\ud83e\uddea Running Tests","text":""},{"location":"internal-docs/tutorials/setup-local-env/#backend-tests","title":"Backend Tests","text":"<pre><code>cd backend\npytest\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#frontend-tests","title":"Frontend Tests","text":"<pre><code>cd frontend\nnpm test\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#common-setup-issues","title":"\ud83d\udee0 Common Setup Issues","text":""},{"location":"internal-docs/tutorials/setup-local-env/#port-conflicts","title":"Port Conflicts","text":"<p>If you encounter port conflicts:</p> <pre><code># Find processes using a port (Linux/Mac)\nlsof -i :8000\n\n# Kill the process (replace &lt;PID&gt; with actual process ID)\nkill -9 &lt;PID&gt;\n\n# On Windows\nnetstat -ano | findstr :8000\ntaskkill /PID &lt;PID&gt; /F\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#database-issues","title":"Database Issues","text":"<p>If the database fails to start:</p> <pre><code># Stop and remove containers with volumes\ndocker-compose down -v\n\n# Start services again\ndocker-compose up -d postgres redis\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#updating-your-environment","title":"\ud83d\udd04 Updating Your Environment","text":"<ol> <li> <p>Update Repository <code>bash    git pull origin main</code></p> </li> <li> <p>Update Dependencies    ```bash    # Frontend    cd frontend    npm install</p> </li> </ol> <p># Backend    cd ../backend    source venv/bin/activate    pip install -r requirements.txt    ```</p> <ol> <li>Run Migrations <code>bash    python manage.py migrate</code></li> </ol>"},{"location":"internal-docs/tutorials/setup-local-env/#development-tools","title":"\ud83e\uddf0 Development Tools","text":""},{"location":"internal-docs/tutorials/setup-local-env/#recommended-extensions","title":"Recommended Extensions","text":"<ul> <li>ESLint - JavaScript/TypeScript linting</li> <li>Prettier - Code formatting</li> <li>Python - Python support</li> <li>Docker - Container management</li> <li>GitLens - Git integration</li> </ul>"},{"location":"internal-docs/tutorials/setup-local-env/#useful-commands","title":"Useful Commands","text":""},{"location":"internal-docs/tutorials/setup-local-env/#database-management","title":"Database Management","text":"<pre><code># Start database services\ndocker-compose up -d postgres redis\n\n# View database logs\ndocker-compose logs -f postgres\n\n# Access PostgreSQL shell\nPGPASSWORD=postgres psql -h localhost -U postgres -d dexaminds\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#virtual-environment","title":"Virtual Environment","text":"<pre><code># Activate virtual environment\n# Windows: .\\venv\\Scripts\\activate\nsource venv/bin/activate\n\n# Install new package\npip install package-name\npip freeze &gt; requirements.txt\n</code></pre>"},{"location":"internal-docs/tutorials/setup-local-env/#getting-help","title":"\ud83e\udd1d Getting Help","text":"<p>If you encounter any issues:</p> <ol> <li> <p>Check the Debugging Guide</p> </li> <li> <p>Search the documentation</p> </li> <li> <p>Contact the Engineering Team at engineering-support@dexaminds.com</p> </li> <li> <p>Open a GitHub issue for bugs or feature requests</p> </li> </ol>"}]}